package com.finallion.artificialfoliage.compatibilty.BOP;

import com.finallion.artificialfoliage.compatibilty.BYG.BYGFluids;
import com.finallion.artificialfoliage.utils.ColorProvider;
import com.finallion.artificialfoliage.utils.ColorUtils;
import com.finallion.artificialfoliage.utils.FluidUtils;
import net.minecraft.block.BlockState;
import net.minecraft.client.color.block.BlockColorProvider;
import net.minecraft.client.color.item.ItemColorProvider;
import net.minecraft.client.color.world.GrassColors;
import net.minecraft.item.ItemStack;
import net.minecraft.util.math.BlockPos;
import net.minecraft.world.BlockRenderView;
import org.jetbrains.annotations.Nullable;

public class BOPColorProvider {

    public static void init() {
        FluidUtils.registerFluidColor(0xff9C3FE4, BOPFluids.STILL_BOP_MYSTIC_GROVE_WATER, BOPFluids.FLOWING_BOP_MYSTIC_GROVE_WATER);
        FluidUtils.registerFluidColor(0xff312346, BOPFluids.STILL_BOP_OMINOUS_WOODS_WATER, BOPFluids.FLOWING_BOP_OMINOUS_WOODS_WATER);
        FluidUtils.registerFluidColor(0xff0E31FF, BOPFluids.STILL_BOP_ORIGIN_VALLEY_WATER, BOPFluids.FLOWING_BOP_ORIGIN_VALLEY_WATER);
        FluidUtils.registerFluidColor(0xff433721, BOPFluids.STILL_BOP_WASTELAND_WATER, BOPFluids.FLOWING_BOP_WASTELAND_WATER);
        FluidUtils.registerFluidColor(0xff272179, BOPFluids.STILL_BOP_WETLAND_WATER, BOPFluids.FLOWING_BOP_WETLAND_WATER);
        FluidUtils.registerFluidColor(0xff62AF84, BOPFluids.STILL_BOP_BAYOU_WATER, BOPFluids.FLOWING_BOP_BAYOU_WATER);
        FluidUtils.registerFluidColor(0xff3FDF99, BOPFluids.STILL_BOP_RAINFOREST_WATER, BOPFluids.FLOWING_BOP_RAINFOREST_WATER);

        ColorUtils.registerGrassBlockColor(BOP_BAMBOO_BLOSSOM_GROVE, BOPBlocks.BOP_BAMBOO_BLOSSOM_GROVE_GRASS_BLOCK, BOPBlocks.BOP_BAMBOO_BLOSSOM_GROVE_GRASS_SLAB, BOPBlocks.GLOWING_BOP_BAMBOO_BLOSSOM_GROVE_GRASS_BLOCK, BOPBlocks.BOP_BAMBOO_BLOSSOM_GROVE_GRASS, BOPBlocks.BOP_BAMBOO_BLOSSOM_GROVE_FERN, BOPBlocks.TALL_BOP_BAMBOO_BLOSSOM_GROVE_GRASS, BOPBlocks.LARGE_BOP_BAMBOO_BLOSSOM_GROVE_FERN, BOPBlocks.BOP_BAMBOO_BLOSSOM_GROVE_SUGAR_CANE, BOPBlocks.POTTED_BAMBOO_BLOSSOM_GROVE_FERN, BOPBlocks.BOP_BAMBOO_BLOSSOM_GROVE_OVERGROWN_STONE, BOPBlocks.BOP_BAMBOO_BLOSSOM_GROVE_OVERGROWN_STONE_SLAB, BOPBlocks.BOP_BAMBOO_BLOSSOM_GROVE_OVERGROWN_DACITE, BOPBlocks.BOP_BAMBOO_BLOSSOM_GROVE_OVERGROWN_DACITE_SLAB, BOPBlocks.BOP_BAMBOO_BLOSSOM_GROVE_OVERGROWN_NETHERRACK, BOPBlocks.BOP_BAMBOO_BLOSSOM_GROVE_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerLeaveBlockColor(BOP_BAMBOO_BLOSSOM_GROVE, BOPBlocks.BOP_BAMBOO_BLOSSOM_GROVE_ACACIA_LEAVES, BOPBlocks.BOP_BAMBOO_BLOSSOM_GROVE_ACACIA_LEAVES_CARPET, BOPBlocks.BOP_BAMBOO_BLOSSOM_GROVE_OAK_LEAVES, BOPBlocks.BOP_BAMBOO_BLOSSOM_GROVE_OAK_LEAVES_CARPET, BOPBlocks.BOP_BAMBOO_BLOSSOM_GROVE_DARK_OAK_LEAVES, BOPBlocks.BOP_BAMBOO_BLOSSOM_GROVE_DARK_OAK_LEAVES_CARPET, BOPBlocks.BOP_BAMBOO_BLOSSOM_GROVE_JUNGLE_LEAVES, BOPBlocks.BOP_BAMBOO_BLOSSOM_GROVE_JUNGLE_LEAVES_CARPET, BOPBlocks.BOP_BAMBOO_BLOSSOM_GROVE_VINE);

        ColorUtils.registerGrassBlockColor(BOP_BAYOU_GRASS, BOPBlocks.BOP_BAYOU_GRASS_BLOCK, BOPBlocks.BOP_BAYOU_GRASS_SLAB, BOPBlocks.GLOWING_BOP_BAYOU_GRASS_BLOCK, BOPBlocks.BOP_BAYOU_GRASS, BOPBlocks.BOP_BAYOU_FERN, BOPBlocks.TALL_BOP_BAYOU_GRASS, BOPBlocks.LARGE_BOP_BAYOU_FERN, BOPBlocks.BOP_BAYOU_SUGAR_CANE, BOPBlocks.POTTED_BAYOU_FERN, BOPBlocks.BOP_BAYOU_OVERGROWN_STONE, BOPBlocks.BOP_BAYOU_OVERGROWN_STONE_SLAB, BOPBlocks.BOP_BAYOU_OVERGROWN_DACITE, BOPBlocks.BOP_BAYOU_OVERGROWN_DACITE_SLAB, BOPBlocks.BOP_BAYOU_OVERGROWN_NETHERRACK, BOPBlocks.BOP_BAYOU_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerLeaveBlockColor(BOP_BAYOU_FOLIAGE, BOPBlocks.BOP_BAYOU_ACACIA_LEAVES, BOPBlocks.BOP_BAYOU_ACACIA_LEAVES_CARPET, BOPBlocks.BOP_BAYOU_OAK_LEAVES, BOPBlocks.BOP_BAYOU_OAK_LEAVES_CARPET, BOPBlocks.BOP_BAYOU_DARK_OAK_LEAVES, BOPBlocks.BOP_BAYOU_DARK_OAK_LEAVES_CARPET, BOPBlocks.BOP_BAYOU_JUNGLE_LEAVES, BOPBlocks.BOP_BAYOU_JUNGLE_LEAVES_CARPET, BOPBlocks.BOP_BAYOU_VINE);

        ColorUtils.registerGrassBlockColor(BOP_BURNT_FOREST_GRASS, BOPBlocks.BOP_BURNT_FOREST_GRASS_BLOCK, BOPBlocks.BOP_BURNT_FOREST_GRASS_SLAB, BOPBlocks.GLOWING_BOP_BURNT_FOREST_GRASS_BLOCK, BOPBlocks.BOP_BURNT_FOREST_GRASS, BOPBlocks.BOP_BURNT_FOREST_FERN, BOPBlocks.TALL_BOP_BURNT_FOREST_GRASS, BOPBlocks.LARGE_BOP_BURNT_FOREST_FERN, BOPBlocks.BOP_BURNT_FOREST_SUGAR_CANE, BOPBlocks.POTTED_BURNT_FOREST_FERN, BOPBlocks.BOP_BURNT_FOREST_OVERGROWN_STONE, BOPBlocks.BOP_BURNT_FOREST_OVERGROWN_STONE_SLAB, BOPBlocks.BOP_BURNT_FOREST_OVERGROWN_DACITE, BOPBlocks.BOP_BURNT_FOREST_OVERGROWN_DACITE_SLAB, BOPBlocks.BOP_BURNT_FOREST_OVERGROWN_NETHERRACK, BOPBlocks.BOP_BURNT_FOREST_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerLeaveBlockColor(BOP_BURNT_FOREST_FOLIAGE, BOPBlocks.BOP_BURNT_FOREST_ACACIA_LEAVES, BOPBlocks.BOP_BURNT_FOREST_ACACIA_LEAVES_CARPET, BOPBlocks.BOP_BURNT_FOREST_OAK_LEAVES, BOPBlocks.BOP_BURNT_FOREST_OAK_LEAVES_CARPET, BOPBlocks.BOP_BURNT_FOREST_DARK_OAK_LEAVES, BOPBlocks.BOP_BURNT_FOREST_DARK_OAK_LEAVES_CARPET, BOPBlocks.BOP_BURNT_FOREST_JUNGLE_LEAVES, BOPBlocks.BOP_BURNT_FOREST_JUNGLE_LEAVES_CARPET, BOPBlocks.BOP_BURNT_FOREST_VINE);

        ColorUtils.registerGrassBlockColor(BOP_CHERRY_BLOSSOM_GROVE_GRASS, BOPBlocks.BOP_CHERRY_BLOSSOM_GROVE_GRASS_BLOCK, BOPBlocks.BOP_CHERRY_BLOSSOM_GROVE_GRASS_SLAB, BOPBlocks.GLOWING_BOP_CHERRY_BLOSSOM_GROVE_GRASS_BLOCK, BOPBlocks.BOP_CHERRY_BLOSSOM_GROVE_GRASS, BOPBlocks.BOP_CHERRY_BLOSSOM_GROVE_FERN, BOPBlocks.TALL_BOP_CHERRY_BLOSSOM_GROVE_GRASS, BOPBlocks.LARGE_BOP_CHERRY_BLOSSOM_GROVE_FERN, BOPBlocks.BOP_CHERRY_BLOSSOM_GROVE_SUGAR_CANE, BOPBlocks.POTTED_CHERRY_BLOSSOM_GROVE_FERN, BOPBlocks.BOP_CHERRY_BLOSSOM_GROVE_OVERGROWN_STONE, BOPBlocks.BOP_CHERRY_BLOSSOM_GROVE_OVERGROWN_STONE_SLAB, BOPBlocks.BOP_CHERRY_BLOSSOM_GROVE_OVERGROWN_DACITE, BOPBlocks.BOP_CHERRY_BLOSSOM_GROVE_OVERGROWN_DACITE_SLAB, BOPBlocks.BOP_CHERRY_BLOSSOM_GROVE_OVERGROWN_NETHERRACK, BOPBlocks.BOP_CHERRY_BLOSSOM_GROVE_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerLeaveBlockColor(BOP_CHERRY_BLOSSOM_GROVE_FOLIAGE, BOPBlocks.BOP_CHERRY_BLOSSOM_GROVE_ACACIA_LEAVES, BOPBlocks.BOP_CHERRY_BLOSSOM_GROVE_ACACIA_LEAVES_CARPET, BOPBlocks.BOP_CHERRY_BLOSSOM_GROVE_OAK_LEAVES, BOPBlocks.BOP_CHERRY_BLOSSOM_GROVE_OAK_LEAVES_CARPET, BOPBlocks.BOP_CHERRY_BLOSSOM_GROVE_DARK_OAK_LEAVES, BOPBlocks.BOP_CHERRY_BLOSSOM_GROVE_DARK_OAK_LEAVES_CARPET, BOPBlocks.BOP_CHERRY_BLOSSOM_GROVE_JUNGLE_LEAVES, BOPBlocks.BOP_CHERRY_BLOSSOM_GROVE_JUNGLE_LEAVES_CARPET, BOPBlocks.BOP_CHERRY_BLOSSOM_GROVE_VINE);

        ColorUtils.registerGrassBlockColor(BOP_CONIFEROUS_FOREST, BOPBlocks.BOP_CONIFEROUS_FOREST_GRASS_BLOCK, BOPBlocks.BOP_CONIFEROUS_FOREST_GRASS_SLAB, BOPBlocks.GLOWING_BOP_CONIFEROUS_FOREST_GRASS_BLOCK, BOPBlocks.BOP_CONIFEROUS_FOREST_GRASS, BOPBlocks.BOP_CONIFEROUS_FOREST_FERN, BOPBlocks.TALL_BOP_CONIFEROUS_FOREST_GRASS, BOPBlocks.LARGE_BOP_CONIFEROUS_FOREST_FERN, BOPBlocks.BOP_CONIFEROUS_FOREST_SUGAR_CANE, BOPBlocks.POTTED_CONIFEROUS_FOREST_FERN, BOPBlocks.BOP_CONIFEROUS_FOREST_OVERGROWN_STONE, BOPBlocks.BOP_CONIFEROUS_FOREST_OVERGROWN_STONE_SLAB, BOPBlocks.BOP_CONIFEROUS_FOREST_OVERGROWN_DACITE, BOPBlocks.BOP_CONIFEROUS_FOREST_OVERGROWN_DACITE_SLAB, BOPBlocks.BOP_CONIFEROUS_FOREST_OVERGROWN_NETHERRACK, BOPBlocks.BOP_CONIFEROUS_FOREST_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerLeaveBlockColor(BOP_CONIFEROUS_FOREST, BOPBlocks.BOP_CONIFEROUS_FOREST_ACACIA_LEAVES, BOPBlocks.BOP_CONIFEROUS_FOREST_ACACIA_LEAVES_CARPET, BOPBlocks.BOP_CONIFEROUS_FOREST_OAK_LEAVES, BOPBlocks.BOP_CONIFEROUS_FOREST_OAK_LEAVES_CARPET, BOPBlocks.BOP_CONIFEROUS_FOREST_DARK_OAK_LEAVES, BOPBlocks.BOP_CONIFEROUS_FOREST_DARK_OAK_LEAVES_CARPET, BOPBlocks.BOP_CONIFEROUS_FOREST_JUNGLE_LEAVES, BOPBlocks.BOP_CONIFEROUS_FOREST_JUNGLE_LEAVES_CARPET, BOPBlocks.BOP_CONIFEROUS_FOREST_VINE);

        ColorUtils.registerGrassBlockColor(BOP_DEAD_FOREST_GRASS, BOPBlocks.BOP_DEAD_FOREST_GRASS_BLOCK, BOPBlocks.BOP_DEAD_FOREST_GRASS_SLAB, BOPBlocks.GLOWING_BOP_DEAD_FOREST_GRASS_BLOCK, BOPBlocks.BOP_DEAD_FOREST_GRASS, BOPBlocks.BOP_DEAD_FOREST_FERN, BOPBlocks.TALL_BOP_DEAD_FOREST_GRASS, BOPBlocks.LARGE_BOP_DEAD_FOREST_FERN, BOPBlocks.BOP_DEAD_FOREST_SUGAR_CANE, BOPBlocks.POTTED_DEAD_FOREST_FERN, BOPBlocks.BOP_DEAD_FOREST_OVERGROWN_STONE, BOPBlocks.BOP_DEAD_FOREST_OVERGROWN_STONE_SLAB, BOPBlocks.BOP_DEAD_FOREST_OVERGROWN_DACITE, BOPBlocks.BOP_DEAD_FOREST_OVERGROWN_DACITE_SLAB, BOPBlocks.BOP_DEAD_FOREST_OVERGROWN_NETHERRACK, BOPBlocks.BOP_DEAD_FOREST_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerLeaveBlockColor(BOP_DEAD_FOREST_FOLIAGE, BOPBlocks.BOP_DEAD_FOREST_ACACIA_LEAVES, BOPBlocks.BOP_DEAD_FOREST_ACACIA_LEAVES_CARPET, BOPBlocks.BOP_DEAD_FOREST_OAK_LEAVES, BOPBlocks.BOP_DEAD_FOREST_OAK_LEAVES_CARPET, BOPBlocks.BOP_DEAD_FOREST_DARK_OAK_LEAVES, BOPBlocks.BOP_DEAD_FOREST_DARK_OAK_LEAVES_CARPET, BOPBlocks.BOP_DEAD_FOREST_JUNGLE_LEAVES, BOPBlocks.BOP_DEAD_FOREST_JUNGLE_LEAVES_CARPET, BOPBlocks.BOP_DEAD_FOREST_VINE);

        ColorUtils.registerGrassBlockColor(BOP_WOODLAND_GRASS, BOPBlocks.BOP_WOODLAND_GRASS_BLOCK, BOPBlocks.BOP_WOODLAND_GRASS_SLAB, BOPBlocks.GLOWING_BOP_WOODLAND_GRASS_BLOCK, BOPBlocks.BOP_WOODLAND_GRASS, BOPBlocks.BOP_WOODLAND_FERN, BOPBlocks.TALL_BOP_WOODLAND_GRASS, BOPBlocks.LARGE_BOP_WOODLAND_FERN, BOPBlocks.BOP_WOODLAND_SUGAR_CANE, BOPBlocks.POTTED_WOODLAND_FERN, BOPBlocks.BOP_WOODLAND_OVERGROWN_STONE, BOPBlocks.BOP_WOODLAND_OVERGROWN_STONE_SLAB, BOPBlocks.BOP_WOODLAND_OVERGROWN_DACITE, BOPBlocks.BOP_WOODLAND_OVERGROWN_DACITE_SLAB, BOPBlocks.BOP_WOODLAND_OVERGROWN_NETHERRACK, BOPBlocks.BOP_WOODLAND_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerLeaveBlockColor(BOP_WOODLAND_FOLIAGE, BOPBlocks.BOP_WOODLAND_ACACIA_LEAVES, BOPBlocks.BOP_WOODLAND_ACACIA_LEAVES_CARPET, BOPBlocks.BOP_WOODLAND_OAK_LEAVES, BOPBlocks.BOP_WOODLAND_OAK_LEAVES_CARPET, BOPBlocks.BOP_WOODLAND_DARK_OAK_LEAVES, BOPBlocks.BOP_WOODLAND_DARK_OAK_LEAVES_CARPET, BOPBlocks.BOP_WOODLAND_JUNGLE_LEAVES, BOPBlocks.BOP_WOODLAND_JUNGLE_LEAVES_CARPET, BOPBlocks.BOP_WOODLAND_VINE);

        ColorUtils.registerGrassBlockColor(BOP_DRYLAND_GRASS, BOPBlocks.BOP_DRYLAND_GRASS_BLOCK, BOPBlocks.BOP_DRYLAND_GRASS_SLAB, BOPBlocks.GLOWING_BOP_DRYLAND_GRASS_BLOCK, BOPBlocks.BOP_DRYLAND_GRASS, BOPBlocks.BOP_DRYLAND_FERN, BOPBlocks.TALL_BOP_DRYLAND_GRASS, BOPBlocks.LARGE_BOP_DRYLAND_FERN, BOPBlocks.BOP_DRYLAND_SUGAR_CANE, BOPBlocks.POTTED_DRYLAND_FERN, BOPBlocks.BOP_DRYLAND_OVERGROWN_STONE, BOPBlocks.BOP_DRYLAND_OVERGROWN_STONE_SLAB, BOPBlocks.BOP_DRYLAND_OVERGROWN_DACITE, BOPBlocks.BOP_DRYLAND_OVERGROWN_DACITE_SLAB, BOPBlocks.BOP_DRYLAND_OVERGROWN_NETHERRACK, BOPBlocks.BOP_DRYLAND_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerLeaveBlockColor(BOP_DRYLAND_FOLIAGE, BOPBlocks.BOP_DRYLAND_ACACIA_LEAVES, BOPBlocks.BOP_DRYLAND_ACACIA_LEAVES_CARPET, BOPBlocks.BOP_DRYLAND_OAK_LEAVES, BOPBlocks.BOP_DRYLAND_OAK_LEAVES_CARPET, BOPBlocks.BOP_DRYLAND_DARK_OAK_LEAVES, BOPBlocks.BOP_DRYLAND_DARK_OAK_LEAVES_CARPET, BOPBlocks.BOP_DRYLAND_JUNGLE_LEAVES, BOPBlocks.BOP_DRYLAND_JUNGLE_LEAVES_CARPET, BOPBlocks.BOP_DRYLAND_VINE);

        ColorUtils.registerGrassBlockColor(BOP_FUNGAL_FIELD_GRASS, BOPBlocks.BOP_FUNGAL_FIELD_GRASS_BLOCK, BOPBlocks.BOP_FUNGAL_FIELD_GRASS_SLAB, BOPBlocks.GLOWING_BOP_FUNGAL_FIELD_GRASS_BLOCK, BOPBlocks.BOP_FUNGAL_FIELD_GRASS, BOPBlocks.BOP_FUNGAL_FIELD_FERN, BOPBlocks.TALL_BOP_FUNGAL_FIELD_GRASS, BOPBlocks.LARGE_BOP_FUNGAL_FIELD_FERN, BOPBlocks.BOP_FUNGAL_FIELD_SUGAR_CANE, BOPBlocks.POTTED_FUNGAL_FIELD_FERN, BOPBlocks.BOP_FUNGAL_FIELD_OVERGROWN_STONE, BOPBlocks.BOP_FUNGAL_FIELD_OVERGROWN_STONE_SLAB, BOPBlocks.BOP_FUNGAL_FIELD_OVERGROWN_DACITE, BOPBlocks.BOP_FUNGAL_FIELD_OVERGROWN_DACITE_SLAB, BOPBlocks.BOP_FUNGAL_FIELD_OVERGROWN_NETHERRACK, BOPBlocks.BOP_FUNGAL_FIELD_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerLeaveBlockColor(BOP_FUNGAL_FIELD_FOLIAGE, BOPBlocks.BOP_FUNGAL_FIELD_ACACIA_LEAVES, BOPBlocks.BOP_FUNGAL_FIELD_ACACIA_LEAVES_CARPET, BOPBlocks.BOP_FUNGAL_FIELD_OAK_LEAVES, BOPBlocks.BOP_FUNGAL_FIELD_OAK_LEAVES_CARPET, BOPBlocks.BOP_FUNGAL_FIELD_DARK_OAK_LEAVES, BOPBlocks.BOP_FUNGAL_FIELD_DARK_OAK_LEAVES_CARPET, BOPBlocks.BOP_FUNGAL_FIELD_JUNGLE_LEAVES, BOPBlocks.BOP_FUNGAL_FIELD_JUNGLE_LEAVES_CARPET, BOPBlocks.BOP_FUNGAL_FIELD_VINE);

        ColorUtils.registerGrassBlockColor(BOP_FUNGAL_FIELD_VARIANT_GRASS, BOPBlocks.BOP_FUNGAL_FIELD_VARIANT_GRASS_BLOCK, BOPBlocks.BOP_FUNGAL_FIELD_VARIANT_GRASS_SLAB, BOPBlocks.GLOWING_BOP_FUNGAL_FIELD_VARIANT_GRASS_BLOCK, BOPBlocks.BOP_FUNGAL_FIELD_VARIANT_GRASS, BOPBlocks.BOP_FUNGAL_FIELD_VARIANT_FERN, BOPBlocks.TALL_BOP_FUNGAL_FIELD_VARIANT_GRASS, BOPBlocks.LARGE_BOP_FUNGAL_FIELD_VARIANT_FERN, BOPBlocks.BOP_FUNGAL_FIELD_VARIANT_SUGAR_CANE, BOPBlocks.POTTED_FUNGAL_FIELD_VARIANT_FERN, BOPBlocks.BOP_FUNGAL_FIELD_VARIANT_OVERGROWN_STONE, BOPBlocks.BOP_FUNGAL_FIELD_VARIANT_OVERGROWN_STONE_SLAB, BOPBlocks.BOP_FUNGAL_FIELD_VARIANT_OVERGROWN_DACITE, BOPBlocks.BOP_FUNGAL_FIELD_VARIANT_OVERGROWN_DACITE_SLAB, BOPBlocks.BOP_FUNGAL_FIELD_VARIANT_OVERGROWN_NETHERRACK, BOPBlocks.BOP_FUNGAL_FIELD_VARIANT_OVERGROWN_NETHERRACK_SLAB);

        ColorUtils.registerGrassBlockColor(BOP_GRAVEL_BEACH, BOPBlocks.BOP_GRAVEL_BEACH_GRASS_BLOCK, BOPBlocks.BOP_GRAVEL_BEACH_GRASS_SLAB, BOPBlocks.GLOWING_BOP_GRAVEL_BEACH_GRASS_BLOCK, BOPBlocks.BOP_GRAVEL_BEACH_GRASS, BOPBlocks.BOP_GRAVEL_BEACH_FERN, BOPBlocks.TALL_BOP_GRAVEL_BEACH_GRASS, BOPBlocks.LARGE_BOP_GRAVEL_BEACH_FERN, BOPBlocks.BOP_GRAVEL_BEACH_SUGAR_CANE, BOPBlocks.POTTED_GRAVEL_BEACH_FERN, BOPBlocks.BOP_GRAVEL_BEACH_OVERGROWN_STONE, BOPBlocks.BOP_GRAVEL_BEACH_OVERGROWN_STONE_SLAB, BOPBlocks.BOP_GRAVEL_BEACH_OVERGROWN_DACITE, BOPBlocks.BOP_GRAVEL_BEACH_OVERGROWN_DACITE_SLAB, BOPBlocks.BOP_GRAVEL_BEACH_OVERGROWN_NETHERRACK, BOPBlocks.BOP_GRAVEL_BEACH_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerLeaveBlockColor(BOP_GRAVEL_BEACH, BOPBlocks.BOP_GRAVEL_BEACH_ACACIA_LEAVES, BOPBlocks.BOP_GRAVEL_BEACH_ACACIA_LEAVES_CARPET, BOPBlocks.BOP_GRAVEL_BEACH_OAK_LEAVES, BOPBlocks.BOP_GRAVEL_BEACH_OAK_LEAVES_CARPET, BOPBlocks.BOP_GRAVEL_BEACH_DARK_OAK_LEAVES, BOPBlocks.BOP_GRAVEL_BEACH_DARK_OAK_LEAVES_CARPET, BOPBlocks.BOP_GRAVEL_BEACH_JUNGLE_LEAVES, BOPBlocks.BOP_GRAVEL_BEACH_JUNGLE_LEAVES_CARPET, BOPBlocks.BOP_GRAVEL_BEACH_VINE);

        ColorUtils.registerGrassBlockColor(BOP_GROVE, BOPBlocks.BOP_GROVE_GRASS_BLOCK, BOPBlocks.BOP_GROVE_GRASS_SLAB, BOPBlocks.GLOWING_BOP_GROVE_GRASS_BLOCK, BOPBlocks.BOP_GROVE_GRASS, BOPBlocks.BOP_GROVE_FERN, BOPBlocks.TALL_BOP_GROVE_GRASS, BOPBlocks.LARGE_BOP_GROVE_FERN, BOPBlocks.BOP_GROVE_SUGAR_CANE, BOPBlocks.POTTED_GROVE_FERN, BOPBlocks.BOP_GROVE_OVERGROWN_STONE, BOPBlocks.BOP_GROVE_OVERGROWN_STONE_SLAB, BOPBlocks.BOP_GROVE_OVERGROWN_DACITE, BOPBlocks.BOP_GROVE_OVERGROWN_DACITE_SLAB, BOPBlocks.BOP_GROVE_OVERGROWN_NETHERRACK, BOPBlocks.BOP_GROVE_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerLeaveBlockColor(BOP_GROVE, BOPBlocks.BOP_GROVE_ACACIA_LEAVES, BOPBlocks.BOP_GROVE_ACACIA_LEAVES_CARPET, BOPBlocks.BOP_GROVE_OAK_LEAVES, BOPBlocks.BOP_GROVE_OAK_LEAVES_CARPET, BOPBlocks.BOP_GROVE_DARK_OAK_LEAVES, BOPBlocks.BOP_GROVE_DARK_OAK_LEAVES_CARPET, BOPBlocks.BOP_GROVE_JUNGLE_LEAVES, BOPBlocks.BOP_GROVE_JUNGLE_LEAVES_CARPET, BOPBlocks.BOP_GROVE_VINE);

        ColorUtils.registerGrassBlockColor(BOP_JADE_CLIFFS_GRASS, BOPBlocks.BOP_JADE_CLIFFS_GRASS_BLOCK, BOPBlocks.BOP_JADE_CLIFFS_GRASS_SLAB, BOPBlocks.GLOWING_BOP_JADE_CLIFFS_GRASS_BLOCK, BOPBlocks.BOP_JADE_CLIFFS_GRASS, BOPBlocks.BOP_JADE_CLIFFS_FERN, BOPBlocks.TALL_BOP_JADE_CLIFFS_GRASS, BOPBlocks.LARGE_BOP_JADE_CLIFFS_FERN, BOPBlocks.BOP_JADE_CLIFFS_SUGAR_CANE, BOPBlocks.POTTED_JADE_CLIFFS_FERN, BOPBlocks.BOP_JADE_CLIFFS_OVERGROWN_STONE, BOPBlocks.BOP_JADE_CLIFFS_OVERGROWN_STONE_SLAB, BOPBlocks.BOP_JADE_CLIFFS_OVERGROWN_DACITE, BOPBlocks.BOP_JADE_CLIFFS_OVERGROWN_DACITE_SLAB, BOPBlocks.BOP_JADE_CLIFFS_OVERGROWN_NETHERRACK, BOPBlocks.BOP_JADE_CLIFFS_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerLeaveBlockColor(BOP_JADE_CLIFFS_FOLIAGE, BOPBlocks.BOP_JADE_CLIFFS_ACACIA_LEAVES, BOPBlocks.BOP_JADE_CLIFFS_ACACIA_LEAVES_CARPET, BOPBlocks.BOP_JADE_CLIFFS_OAK_LEAVES, BOPBlocks.BOP_JADE_CLIFFS_OAK_LEAVES_CARPET, BOPBlocks.BOP_JADE_CLIFFS_DARK_OAK_LEAVES, BOPBlocks.BOP_JADE_CLIFFS_DARK_OAK_LEAVES_CARPET, BOPBlocks.BOP_JADE_CLIFFS_JUNGLE_LEAVES, BOPBlocks.BOP_JADE_CLIFFS_JUNGLE_LEAVES_CARPET, BOPBlocks.BOP_JADE_CLIFFS_VINE);

        ColorUtils.registerGrassBlockColor(BOP_LAVENDER_FIELD, BOPBlocks.BOP_LAVENDER_FIELD_GRASS_BLOCK, BOPBlocks.BOP_LAVENDER_FIELD_GRASS_SLAB, BOPBlocks.GLOWING_BOP_LAVENDER_FIELD_GRASS_BLOCK, BOPBlocks.BOP_LAVENDER_FIELD_GRASS, BOPBlocks.BOP_LAVENDER_FIELD_FERN, BOPBlocks.TALL_BOP_LAVENDER_FIELD_GRASS, BOPBlocks.LARGE_BOP_LAVENDER_FIELD_FERN, BOPBlocks.BOP_LAVENDER_FIELD_SUGAR_CANE, BOPBlocks.POTTED_LAVENDER_FIELD_FERN, BOPBlocks.BOP_LAVENDER_FIELD_OVERGROWN_STONE, BOPBlocks.BOP_LAVENDER_FIELD_OVERGROWN_STONE_SLAB, BOPBlocks.BOP_LAVENDER_FIELD_OVERGROWN_DACITE, BOPBlocks.BOP_LAVENDER_FIELD_OVERGROWN_DACITE_SLAB, BOPBlocks.BOP_LAVENDER_FIELD_OVERGROWN_NETHERRACK, BOPBlocks.BOP_LAVENDER_FIELD_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerLeaveBlockColor(BOP_LAVENDER_FIELD, BOPBlocks.BOP_LAVENDER_FIELD_ACACIA_LEAVES, BOPBlocks.BOP_LAVENDER_FIELD_ACACIA_LEAVES_CARPET, BOPBlocks.BOP_LAVENDER_FIELD_OAK_LEAVES, BOPBlocks.BOP_LAVENDER_FIELD_OAK_LEAVES_CARPET, BOPBlocks.BOP_LAVENDER_FIELD_DARK_OAK_LEAVES, BOPBlocks.BOP_LAVENDER_FIELD_DARK_OAK_LEAVES_CARPET, BOPBlocks.BOP_LAVENDER_FIELD_JUNGLE_LEAVES, BOPBlocks.BOP_LAVENDER_FIELD_JUNGLE_LEAVES_CARPET, BOPBlocks.BOP_LAVENDER_FIELD_VINE);

        ColorUtils.registerGrassBlockColor(BOP_LUSH_DESERT_GRASS, BOPBlocks.BOP_LUSH_DESERT_GRASS_BLOCK, BOPBlocks.BOP_LUSH_DESERT_GRASS_SLAB, BOPBlocks.GLOWING_BOP_LUSH_DESERT_GRASS_BLOCK, BOPBlocks.BOP_LUSH_DESERT_GRASS, BOPBlocks.BOP_LUSH_DESERT_FERN, BOPBlocks.TALL_BOP_LUSH_DESERT_GRASS, BOPBlocks.LARGE_BOP_LUSH_DESERT_FERN, BOPBlocks.BOP_LUSH_DESERT_SUGAR_CANE, BOPBlocks.POTTED_LUSH_DESERT_FERN, BOPBlocks.BOP_LUSH_DESERT_OVERGROWN_STONE, BOPBlocks.BOP_LUSH_DESERT_OVERGROWN_STONE_SLAB, BOPBlocks.BOP_LUSH_DESERT_OVERGROWN_DACITE, BOPBlocks.BOP_LUSH_DESERT_OVERGROWN_DACITE_SLAB, BOPBlocks.BOP_LUSH_DESERT_OVERGROWN_NETHERRACK, BOPBlocks.BOP_LUSH_DESERT_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerLeaveBlockColor(BOP_LUSH_DESERT_FOLIAGE, BOPBlocks.BOP_LUSH_DESERT_ACACIA_LEAVES, BOPBlocks.BOP_LUSH_DESERT_ACACIA_LEAVES_CARPET, BOPBlocks.BOP_LUSH_DESERT_OAK_LEAVES, BOPBlocks.BOP_LUSH_DESERT_OAK_LEAVES_CARPET, BOPBlocks.BOP_LUSH_DESERT_DARK_OAK_LEAVES, BOPBlocks.BOP_LUSH_DESERT_DARK_OAK_LEAVES_CARPET, BOPBlocks.BOP_LUSH_DESERT_JUNGLE_LEAVES, BOPBlocks.BOP_LUSH_DESERT_JUNGLE_LEAVES_CARPET, BOPBlocks.BOP_LUSH_DESERT_VINE);

        ColorUtils.registerGrassBlockColor(BOP_MARSH, BOPBlocks.BOP_MARSH_GRASS_BLOCK, BOPBlocks.BOP_MARSH_GRASS_SLAB, BOPBlocks.GLOWING_BOP_MARSH_GRASS_BLOCK, BOPBlocks.BOP_MARSH_GRASS, BOPBlocks.BOP_MARSH_FERN, BOPBlocks.TALL_BOP_MARSH_GRASS, BOPBlocks.LARGE_BOP_MARSH_FERN, BOPBlocks.BOP_MARSH_SUGAR_CANE, BOPBlocks.POTTED_MARSH_FERN, BOPBlocks.BOP_MARSH_OVERGROWN_STONE, BOPBlocks.BOP_MARSH_OVERGROWN_STONE_SLAB, BOPBlocks.BOP_MARSH_OVERGROWN_DACITE, BOPBlocks.BOP_MARSH_OVERGROWN_DACITE_SLAB, BOPBlocks.BOP_MARSH_OVERGROWN_NETHERRACK, BOPBlocks.BOP_MARSH_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerLeaveBlockColor(BOP_MARSH, BOPBlocks.BOP_MARSH_ACACIA_LEAVES, BOPBlocks.BOP_MARSH_ACACIA_LEAVES_CARPET, BOPBlocks.BOP_MARSH_OAK_LEAVES, BOPBlocks.BOP_MARSH_OAK_LEAVES_CARPET, BOPBlocks.BOP_MARSH_DARK_OAK_LEAVES, BOPBlocks.BOP_MARSH_DARK_OAK_LEAVES_CARPET, BOPBlocks.BOP_MARSH_JUNGLE_LEAVES, BOPBlocks.BOP_MARSH_JUNGLE_LEAVES_CARPET, BOPBlocks.BOP_MARSH_VINE);

        ColorUtils.registerGrassBlockColor(BOP_MEADOW, BOPBlocks.BOP_MEADOW_GRASS_BLOCK, BOPBlocks.BOP_MEADOW_GRASS_SLAB, BOPBlocks.GLOWING_BOP_MEADOW_GRASS_BLOCK, BOPBlocks.BOP_MEADOW_GRASS, BOPBlocks.BOP_MEADOW_FERN, BOPBlocks.TALL_BOP_MEADOW_GRASS, BOPBlocks.LARGE_BOP_MEADOW_FERN, BOPBlocks.BOP_MEADOW_SUGAR_CANE, BOPBlocks.POTTED_MEADOW_FERN, BOPBlocks.BOP_MEADOW_OVERGROWN_STONE, BOPBlocks.BOP_MEADOW_OVERGROWN_STONE_SLAB, BOPBlocks.BOP_MEADOW_OVERGROWN_DACITE, BOPBlocks.BOP_MEADOW_OVERGROWN_DACITE_SLAB, BOPBlocks.BOP_MEADOW_OVERGROWN_NETHERRACK, BOPBlocks.BOP_MEADOW_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerLeaveBlockColor(BOP_MEADOW, BOPBlocks.BOP_MEADOW_ACACIA_LEAVES, BOPBlocks.BOP_MEADOW_ACACIA_LEAVES_CARPET, BOPBlocks.BOP_MEADOW_OAK_LEAVES, BOPBlocks.BOP_MEADOW_OAK_LEAVES_CARPET, BOPBlocks.BOP_MEADOW_DARK_OAK_LEAVES, BOPBlocks.BOP_MEADOW_DARK_OAK_LEAVES_CARPET, BOPBlocks.BOP_MEADOW_JUNGLE_LEAVES, BOPBlocks.BOP_MEADOW_JUNGLE_LEAVES_CARPET, BOPBlocks.BOP_MEADOW_VINE);

        ColorUtils.registerGrassBlockColor(BOP_MUSKEG_GRASS, BOPBlocks.BOP_MUSKEG_GRASS_BLOCK, BOPBlocks.BOP_MUSKEG_GRASS_SLAB, BOPBlocks.GLOWING_BOP_MUSKEG_GRASS_BLOCK, BOPBlocks.BOP_MUSKEG_GRASS, BOPBlocks.BOP_MUSKEG_FERN, BOPBlocks.TALL_BOP_MUSKEG_GRASS, BOPBlocks.LARGE_BOP_MUSKEG_FERN, BOPBlocks.BOP_MUSKEG_SUGAR_CANE, BOPBlocks.POTTED_MUSKEG_FERN, BOPBlocks.BOP_MUSKEG_OVERGROWN_STONE, BOPBlocks.BOP_MUSKEG_OVERGROWN_STONE_SLAB, BOPBlocks.BOP_MUSKEG_OVERGROWN_DACITE, BOPBlocks.BOP_MUSKEG_OVERGROWN_DACITE_SLAB, BOPBlocks.BOP_MUSKEG_OVERGROWN_NETHERRACK, BOPBlocks.BOP_MUSKEG_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerLeaveBlockColor(BOP_MUSKEG_FOLIAGE, BOPBlocks.BOP_MUSKEG_ACACIA_LEAVES, BOPBlocks.BOP_MUSKEG_ACACIA_LEAVES_CARPET, BOPBlocks.BOP_MUSKEG_OAK_LEAVES, BOPBlocks.BOP_MUSKEG_OAK_LEAVES_CARPET, BOPBlocks.BOP_MUSKEG_DARK_OAK_LEAVES, BOPBlocks.BOP_MUSKEG_DARK_OAK_LEAVES_CARPET, BOPBlocks.BOP_MUSKEG_JUNGLE_LEAVES, BOPBlocks.BOP_MUSKEG_JUNGLE_LEAVES_CARPET, BOPBlocks.BOP_MUSKEG_VINE);

        ColorUtils.registerGrassBlockColor(BOP_MYSTIC_GROVE_GRASS, BOPBlocks.BOP_MYSTIC_GROVE_GRASS_BLOCK, BOPBlocks.BOP_MYSTIC_GROVE_GRASS_SLAB, BOPBlocks.GLOWING_BOP_MYSTIC_GROVE_GRASS_BLOCK, BOPBlocks.BOP_MYSTIC_GROVE_GRASS, BOPBlocks.BOP_MYSTIC_GROVE_FERN, BOPBlocks.TALL_BOP_MYSTIC_GROVE_GRASS, BOPBlocks.LARGE_BOP_MYSTIC_GROVE_FERN, BOPBlocks.BOP_MYSTIC_GROVE_SUGAR_CANE, BOPBlocks.POTTED_MYSTIC_GROVE_FERN, BOPBlocks.BOP_MYSTIC_GROVE_OVERGROWN_STONE, BOPBlocks.BOP_MYSTIC_GROVE_OVERGROWN_STONE_SLAB, BOPBlocks.BOP_MYSTIC_GROVE_OVERGROWN_DACITE, BOPBlocks.BOP_MYSTIC_GROVE_OVERGROWN_DACITE_SLAB, BOPBlocks.BOP_MYSTIC_GROVE_OVERGROWN_NETHERRACK, BOPBlocks.BOP_MYSTIC_GROVE_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerLeaveBlockColor(BOP_MYSTIC_GROVE_FOLIAGE, BOPBlocks.BOP_MYSTIC_GROVE_ACACIA_LEAVES, BOPBlocks.BOP_MYSTIC_GROVE_ACACIA_LEAVES_CARPET, BOPBlocks.BOP_MYSTIC_GROVE_OAK_LEAVES, BOPBlocks.BOP_MYSTIC_GROVE_OAK_LEAVES_CARPET, BOPBlocks.BOP_MYSTIC_GROVE_DARK_OAK_LEAVES, BOPBlocks.BOP_MYSTIC_GROVE_DARK_OAK_LEAVES_CARPET, BOPBlocks.BOP_MYSTIC_GROVE_JUNGLE_LEAVES, BOPBlocks.BOP_MYSTIC_GROVE_JUNGLE_LEAVES_CARPET, BOPBlocks.BOP_MYSTIC_GROVE_VINE);

        ColorUtils.registerGrassBlockColor(BOP_OMINOUS_WOODS_GRASS, BOPBlocks.BOP_OMINOUS_WOODS_GRASS_BLOCK, BOPBlocks.BOP_OMINOUS_WOODS_GRASS_SLAB, BOPBlocks.GLOWING_BOP_OMINOUS_WOODS_GRASS_BLOCK, BOPBlocks.BOP_OMINOUS_WOODS_GRASS, BOPBlocks.BOP_OMINOUS_WOODS_FERN, BOPBlocks.TALL_BOP_OMINOUS_WOODS_GRASS, BOPBlocks.LARGE_BOP_OMINOUS_WOODS_FERN, BOPBlocks.BOP_OMINOUS_WOODS_SUGAR_CANE, BOPBlocks.POTTED_OMINOUS_WOODS_FERN, BOPBlocks.BOP_OMINOUS_WOODS_OVERGROWN_STONE, BOPBlocks.BOP_OMINOUS_WOODS_OVERGROWN_STONE_SLAB, BOPBlocks.BOP_OMINOUS_WOODS_OVERGROWN_DACITE, BOPBlocks.BOP_OMINOUS_WOODS_OVERGROWN_DACITE_SLAB, BOPBlocks.BOP_OMINOUS_WOODS_OVERGROWN_NETHERRACK, BOPBlocks.BOP_OMINOUS_WOODS_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerLeaveBlockColor(BOP_OMINOUS_WOODS_FOLIAGE, BOPBlocks.BOP_OMINOUS_WOODS_ACACIA_LEAVES, BOPBlocks.BOP_OMINOUS_WOODS_ACACIA_LEAVES_CARPET, BOPBlocks.BOP_OMINOUS_WOODS_OAK_LEAVES, BOPBlocks.BOP_OMINOUS_WOODS_OAK_LEAVES_CARPET, BOPBlocks.BOP_OMINOUS_WOODS_DARK_OAK_LEAVES, BOPBlocks.BOP_OMINOUS_WOODS_DARK_OAK_LEAVES_CARPET, BOPBlocks.BOP_OMINOUS_WOODS_JUNGLE_LEAVES, BOPBlocks.BOP_OMINOUS_WOODS_JUNGLE_LEAVES_CARPET, BOPBlocks.BOP_OMINOUS_WOODS_VINE);

        ColorUtils.registerGrassBlockColor(BOP_ORCHARD_GRASS, BOPBlocks.BOP_ORCHARD_GRASS_BLOCK, BOPBlocks.BOP_ORCHARD_GRASS_SLAB, BOPBlocks.GLOWING_BOP_ORCHARD_GRASS_BLOCK, BOPBlocks.BOP_ORCHARD_GRASS, BOPBlocks.BOP_ORCHARD_FERN, BOPBlocks.TALL_BOP_ORCHARD_GRASS, BOPBlocks.LARGE_BOP_ORCHARD_FERN, BOPBlocks.BOP_ORCHARD_SUGAR_CANE, BOPBlocks.POTTED_ORCHARD_FERN, BOPBlocks.BOP_ORCHARD_OVERGROWN_STONE, BOPBlocks.BOP_ORCHARD_OVERGROWN_STONE_SLAB, BOPBlocks.BOP_ORCHARD_OVERGROWN_DACITE, BOPBlocks.BOP_ORCHARD_OVERGROWN_DACITE_SLAB, BOPBlocks.BOP_ORCHARD_OVERGROWN_NETHERRACK, BOPBlocks.BOP_ORCHARD_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerLeaveBlockColor(BOP_ORCHARD_FOLIAGE, BOPBlocks.BOP_ORCHARD_ACACIA_LEAVES, BOPBlocks.BOP_ORCHARD_ACACIA_LEAVES_CARPET, BOPBlocks.BOP_ORCHARD_OAK_LEAVES, BOPBlocks.BOP_ORCHARD_OAK_LEAVES_CARPET, BOPBlocks.BOP_ORCHARD_DARK_OAK_LEAVES, BOPBlocks.BOP_ORCHARD_DARK_OAK_LEAVES_CARPET, BOPBlocks.BOP_ORCHARD_JUNGLE_LEAVES, BOPBlocks.BOP_ORCHARD_JUNGLE_LEAVES_CARPET, BOPBlocks.BOP_ORCHARD_VINE);

        ColorUtils.registerGrassBlockColor(BOP_ORIGIN_VALLEY_GRASS, BOPBlocks.BOP_ORIGIN_VALLEY_GRASS_BLOCK, BOPBlocks.BOP_ORIGIN_VALLEY_GRASS_SLAB, BOPBlocks.GLOWING_BOP_ORIGIN_VALLEY_GRASS_BLOCK, BOPBlocks.BOP_ORIGIN_VALLEY_GRASS, BOPBlocks.BOP_ORIGIN_VALLEY_FERN, BOPBlocks.TALL_BOP_ORIGIN_VALLEY_GRASS, BOPBlocks.LARGE_BOP_ORIGIN_VALLEY_FERN, BOPBlocks.BOP_ORIGIN_VALLEY_SUGAR_CANE, BOPBlocks.POTTED_ORIGIN_VALLEY_FERN, BOPBlocks.BOP_ORIGIN_VALLEY_OVERGROWN_STONE, BOPBlocks.BOP_ORIGIN_VALLEY_OVERGROWN_STONE_SLAB, BOPBlocks.BOP_ORIGIN_VALLEY_OVERGROWN_DACITE, BOPBlocks.BOP_ORIGIN_VALLEY_OVERGROWN_DACITE_SLAB, BOPBlocks.BOP_ORIGIN_VALLEY_OVERGROWN_NETHERRACK, BOPBlocks.BOP_ORIGIN_VALLEY_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerLeaveBlockColor(BOP_ORIGIN_VALLEY_FOLIAGE, BOPBlocks.BOP_ORIGIN_VALLEY_ACACIA_LEAVES, BOPBlocks.BOP_ORIGIN_VALLEY_ACACIA_LEAVES_CARPET, BOPBlocks.BOP_ORIGIN_VALLEY_OAK_LEAVES, BOPBlocks.BOP_ORIGIN_VALLEY_OAK_LEAVES_CARPET, BOPBlocks.BOP_ORIGIN_VALLEY_DARK_OAK_LEAVES, BOPBlocks.BOP_ORIGIN_VALLEY_DARK_OAK_LEAVES_CARPET, BOPBlocks.BOP_ORIGIN_VALLEY_JUNGLE_LEAVES, BOPBlocks.BOP_ORIGIN_VALLEY_JUNGLE_LEAVES_CARPET, BOPBlocks.BOP_ORIGIN_VALLEY_VINE);

        ColorUtils.registerGrassBlockColor(BOP_RAINBOW_HILLS_GRASS, BOPBlocks.BOP_RAINBOW_HILLS_GRASS_BLOCK, BOPBlocks.BOP_RAINBOW_HILLS_GRASS_SLAB, BOPBlocks.GLOWING_BOP_RAINBOW_HILLS_GRASS_BLOCK, BOPBlocks.BOP_RAINBOW_HILLS_GRASS, BOPBlocks.BOP_RAINBOW_HILLS_FERN, BOPBlocks.TALL_BOP_RAINBOW_HILLS_GRASS, BOPBlocks.LARGE_BOP_RAINBOW_HILLS_FERN, BOPBlocks.BOP_RAINBOW_HILLS_SUGAR_CANE, BOPBlocks.POTTED_RAINBOW_HILLS_FERN, BOPBlocks.BOP_RAINBOW_HILLS_OVERGROWN_STONE, BOPBlocks.BOP_RAINBOW_HILLS_OVERGROWN_STONE_SLAB, BOPBlocks.BOP_RAINBOW_HILLS_OVERGROWN_DACITE, BOPBlocks.BOP_RAINBOW_HILLS_OVERGROWN_DACITE_SLAB, BOPBlocks.BOP_RAINBOW_HILLS_OVERGROWN_NETHERRACK, BOPBlocks.BOP_RAINBOW_HILLS_OVERGROWN_NETHERRACK_SLAB);
        // call getFoliageColor
        ColorUtils.registerLeaveBlockColor(BOP_RAINBOW_HILLS_GRASS, BOPBlocks.BOP_RAINBOW_HILLS_ACACIA_LEAVES, BOPBlocks.BOP_RAINBOW_HILLS_ACACIA_LEAVES_CARPET, BOPBlocks.BOP_RAINBOW_HILLS_OAK_LEAVES, BOPBlocks.BOP_RAINBOW_HILLS_OAK_LEAVES_CARPET, BOPBlocks.BOP_RAINBOW_HILLS_DARK_OAK_LEAVES, BOPBlocks.BOP_RAINBOW_HILLS_DARK_OAK_LEAVES_CARPET, BOPBlocks.BOP_RAINBOW_HILLS_JUNGLE_LEAVES, BOPBlocks.BOP_RAINBOW_HILLS_JUNGLE_LEAVES_CARPET, BOPBlocks.BOP_RAINBOW_HILLS_VINE);

        ColorUtils.registerGrassBlockColor(BOP_PRAIRIE_GRASS, BOPBlocks.BOP_PRAIRIE_GRASS_BLOCK, BOPBlocks.BOP_PRAIRIE_GRASS_SLAB, BOPBlocks.GLOWING_BOP_PRAIRIE_GRASS_BLOCK, BOPBlocks.BOP_PRAIRIE_GRASS, BOPBlocks.BOP_PRAIRIE_FERN, BOPBlocks.TALL_BOP_PRAIRIE_GRASS, BOPBlocks.LARGE_BOP_PRAIRIE_FERN, BOPBlocks.BOP_PRAIRIE_SUGAR_CANE, BOPBlocks.POTTED_PRAIRIE_FERN, BOPBlocks.BOP_PRAIRIE_OVERGROWN_STONE, BOPBlocks.BOP_PRAIRIE_OVERGROWN_STONE_SLAB, BOPBlocks.BOP_PRAIRIE_OVERGROWN_DACITE, BOPBlocks.BOP_PRAIRIE_OVERGROWN_DACITE_SLAB, BOPBlocks.BOP_PRAIRIE_OVERGROWN_NETHERRACK, BOPBlocks.BOP_PRAIRIE_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerLeaveBlockColor(BOP_PRAIRIE_FOLIAGE, BOPBlocks.BOP_PRAIRIE_ACACIA_LEAVES, BOPBlocks.BOP_PRAIRIE_ACACIA_LEAVES_CARPET, BOPBlocks.BOP_PRAIRIE_OAK_LEAVES, BOPBlocks.BOP_PRAIRIE_OAK_LEAVES_CARPET, BOPBlocks.BOP_PRAIRIE_DARK_OAK_LEAVES, BOPBlocks.BOP_PRAIRIE_DARK_OAK_LEAVES_CARPET, BOPBlocks.BOP_PRAIRIE_JUNGLE_LEAVES, BOPBlocks.BOP_PRAIRIE_JUNGLE_LEAVES_CARPET, BOPBlocks.BOP_PRAIRIE_VINE);

        ColorUtils.registerGrassBlockColor(BOP_RAINFOREST_GRASS, BOPBlocks.BOP_RAINFOREST_GRASS_BLOCK, BOPBlocks.BOP_RAINFOREST_GRASS_SLAB, BOPBlocks.GLOWING_BOP_RAINFOREST_GRASS_BLOCK, BOPBlocks.BOP_RAINFOREST_GRASS, BOPBlocks.BOP_RAINFOREST_FERN, BOPBlocks.TALL_BOP_RAINFOREST_GRASS, BOPBlocks.LARGE_BOP_RAINFOREST_FERN, BOPBlocks.BOP_RAINFOREST_SUGAR_CANE, BOPBlocks.POTTED_RAINFOREST_FERN, BOPBlocks.BOP_RAINFOREST_OVERGROWN_STONE, BOPBlocks.BOP_RAINFOREST_OVERGROWN_STONE_SLAB, BOPBlocks.BOP_RAINFOREST_OVERGROWN_DACITE, BOPBlocks.BOP_RAINFOREST_OVERGROWN_DACITE_SLAB, BOPBlocks.BOP_RAINFOREST_OVERGROWN_NETHERRACK, BOPBlocks.BOP_RAINFOREST_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerLeaveBlockColor(BOP_RAINFOREST_FOLIAGE, BOPBlocks.BOP_RAINFOREST_ACACIA_LEAVES, BOPBlocks.BOP_RAINFOREST_ACACIA_LEAVES_CARPET, BOPBlocks.BOP_RAINFOREST_OAK_LEAVES, BOPBlocks.BOP_RAINFOREST_OAK_LEAVES_CARPET, BOPBlocks.BOP_RAINFOREST_DARK_OAK_LEAVES, BOPBlocks.BOP_RAINFOREST_DARK_OAK_LEAVES_CARPET, BOPBlocks.BOP_RAINFOREST_JUNGLE_LEAVES, BOPBlocks.BOP_RAINFOREST_JUNGLE_LEAVES_CARPET, BOPBlocks.BOP_RAINFOREST_VINE);

        ColorUtils.registerGrassBlockColor(BOP_REDWOOD_FOREST_GRASS, BOPBlocks.BOP_REDWOOD_FOREST_GRASS_BLOCK, BOPBlocks.BOP_REDWOOD_FOREST_GRASS_SLAB, BOPBlocks.GLOWING_BOP_REDWOOD_FOREST_GRASS_BLOCK, BOPBlocks.BOP_REDWOOD_FOREST_GRASS, BOPBlocks.BOP_REDWOOD_FOREST_FERN, BOPBlocks.TALL_BOP_REDWOOD_FOREST_GRASS, BOPBlocks.LARGE_BOP_REDWOOD_FOREST_FERN, BOPBlocks.BOP_REDWOOD_FOREST_SUGAR_CANE, BOPBlocks.POTTED_REDWOOD_FOREST_FERN, BOPBlocks.BOP_REDWOOD_FOREST_OVERGROWN_STONE, BOPBlocks.BOP_REDWOOD_FOREST_OVERGROWN_STONE_SLAB, BOPBlocks.BOP_REDWOOD_FOREST_OVERGROWN_DACITE, BOPBlocks.BOP_REDWOOD_FOREST_OVERGROWN_DACITE_SLAB, BOPBlocks.BOP_REDWOOD_FOREST_OVERGROWN_NETHERRACK, BOPBlocks.BOP_REDWOOD_FOREST_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerLeaveBlockColor(BOP_REDWOOD_FOREST_FOLIAGE, BOPBlocks.BOP_REDWOOD_FOREST_ACACIA_LEAVES, BOPBlocks.BOP_REDWOOD_FOREST_ACACIA_LEAVES_CARPET, BOPBlocks.BOP_REDWOOD_FOREST_OAK_LEAVES, BOPBlocks.BOP_REDWOOD_FOREST_OAK_LEAVES_CARPET, BOPBlocks.BOP_REDWOOD_FOREST_DARK_OAK_LEAVES, BOPBlocks.BOP_REDWOOD_FOREST_DARK_OAK_LEAVES_CARPET, BOPBlocks.BOP_REDWOOD_FOREST_JUNGLE_LEAVES, BOPBlocks.BOP_REDWOOD_FOREST_JUNGLE_LEAVES_CARPET, BOPBlocks.BOP_REDWOOD_FOREST_VINE);

        ColorUtils.registerGrassBlockColor(BOP_SCRUBLAND, BOPBlocks.BOP_SCRUBLAND_GRASS_BLOCK, BOPBlocks.BOP_SCRUBLAND_GRASS_SLAB, BOPBlocks.GLOWING_BOP_SCRUBLAND_GRASS_BLOCK, BOPBlocks.BOP_SCRUBLAND_GRASS, BOPBlocks.BOP_SCRUBLAND_FERN, BOPBlocks.TALL_BOP_SCRUBLAND_GRASS, BOPBlocks.LARGE_BOP_SCRUBLAND_FERN, BOPBlocks.BOP_SCRUBLAND_SUGAR_CANE, BOPBlocks.POTTED_SCRUBLAND_FERN, BOPBlocks.BOP_SCRUBLAND_OVERGROWN_STONE, BOPBlocks.BOP_SCRUBLAND_OVERGROWN_STONE_SLAB, BOPBlocks.BOP_SCRUBLAND_OVERGROWN_DACITE, BOPBlocks.BOP_SCRUBLAND_OVERGROWN_DACITE_SLAB, BOPBlocks.BOP_SCRUBLAND_OVERGROWN_NETHERRACK, BOPBlocks.BOP_SCRUBLAND_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerLeaveBlockColor(BOP_SCRUBLAND, BOPBlocks.BOP_SCRUBLAND_ACACIA_LEAVES, BOPBlocks.BOP_SCRUBLAND_ACACIA_LEAVES_CARPET, BOPBlocks.BOP_SCRUBLAND_OAK_LEAVES, BOPBlocks.BOP_SCRUBLAND_OAK_LEAVES_CARPET, BOPBlocks.BOP_SCRUBLAND_DARK_OAK_LEAVES, BOPBlocks.BOP_SCRUBLAND_DARK_OAK_LEAVES_CARPET, BOPBlocks.BOP_SCRUBLAND_JUNGLE_LEAVES, BOPBlocks.BOP_SCRUBLAND_JUNGLE_LEAVES_CARPET, BOPBlocks.BOP_SCRUBLAND_VINE);

        ColorUtils.registerGrassBlockColor(BOP_SEASONAL_FOREST_GRASS, BOPBlocks.BOP_SEASONAL_FOREST_GRASS_BLOCK, BOPBlocks.BOP_SEASONAL_FOREST_GRASS_SLAB, BOPBlocks.GLOWING_BOP_SEASONAL_FOREST_GRASS_BLOCK, BOPBlocks.BOP_SEASONAL_FOREST_GRASS, BOPBlocks.BOP_SEASONAL_FOREST_FERN, BOPBlocks.TALL_BOP_SEASONAL_FOREST_GRASS, BOPBlocks.LARGE_BOP_SEASONAL_FOREST_FERN, BOPBlocks.BOP_SEASONAL_FOREST_SUGAR_CANE, BOPBlocks.POTTED_SEASONAL_FOREST_FERN, BOPBlocks.BOP_SEASONAL_FOREST_OVERGROWN_STONE, BOPBlocks.BOP_SEASONAL_FOREST_OVERGROWN_STONE_SLAB, BOPBlocks.BOP_SEASONAL_FOREST_OVERGROWN_DACITE, BOPBlocks.BOP_SEASONAL_FOREST_OVERGROWN_DACITE_SLAB, BOPBlocks.BOP_SEASONAL_FOREST_OVERGROWN_NETHERRACK, BOPBlocks.BOP_SEASONAL_FOREST_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerLeaveBlockColor(BOP_SEASONAL_FOREST_FOLIAGE, BOPBlocks.BOP_SEASONAL_FOREST_ACACIA_LEAVES, BOPBlocks.BOP_SEASONAL_FOREST_ACACIA_LEAVES_CARPET, BOPBlocks.BOP_SEASONAL_FOREST_OAK_LEAVES, BOPBlocks.BOP_SEASONAL_FOREST_OAK_LEAVES_CARPET, BOPBlocks.BOP_SEASONAL_FOREST_DARK_OAK_LEAVES, BOPBlocks.BOP_SEASONAL_FOREST_DARK_OAK_LEAVES_CARPET, BOPBlocks.BOP_SEASONAL_FOREST_JUNGLE_LEAVES, BOPBlocks.BOP_SEASONAL_FOREST_JUNGLE_LEAVES_CARPET, BOPBlocks.BOP_SEASONAL_FOREST_VINE);

        ColorUtils.registerGrassBlockColor(BOP_SHRUBLAND, BOPBlocks.BOP_SHRUBLAND_GRASS_BLOCK, BOPBlocks.BOP_SHRUBLAND_GRASS_SLAB, BOPBlocks.GLOWING_BOP_SHRUBLAND_GRASS_BLOCK, BOPBlocks.BOP_SHRUBLAND_GRASS, BOPBlocks.BOP_SHRUBLAND_FERN, BOPBlocks.TALL_BOP_SHRUBLAND_GRASS, BOPBlocks.LARGE_BOP_SHRUBLAND_FERN, BOPBlocks.BOP_SHRUBLAND_SUGAR_CANE, BOPBlocks.POTTED_SHRUBLAND_FERN, BOPBlocks.BOP_SHRUBLAND_OVERGROWN_STONE, BOPBlocks.BOP_SHRUBLAND_OVERGROWN_STONE_SLAB, BOPBlocks.BOP_SHRUBLAND_OVERGROWN_DACITE, BOPBlocks.BOP_SHRUBLAND_OVERGROWN_DACITE_SLAB, BOPBlocks.BOP_SHRUBLAND_OVERGROWN_NETHERRACK, BOPBlocks.BOP_SHRUBLAND_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerLeaveBlockColor(BOP_SHRUBLAND, BOPBlocks.BOP_SHRUBLAND_ACACIA_LEAVES, BOPBlocks.BOP_SHRUBLAND_ACACIA_LEAVES_CARPET, BOPBlocks.BOP_SHRUBLAND_OAK_LEAVES, BOPBlocks.BOP_SHRUBLAND_OAK_LEAVES_CARPET, BOPBlocks.BOP_SHRUBLAND_DARK_OAK_LEAVES, BOPBlocks.BOP_SHRUBLAND_DARK_OAK_LEAVES_CARPET, BOPBlocks.BOP_SHRUBLAND_JUNGLE_LEAVES, BOPBlocks.BOP_SHRUBLAND_JUNGLE_LEAVES_CARPET, BOPBlocks.BOP_SHRUBLAND_VINE);

        ColorUtils.registerGrassBlockColor(BOP_TROPICS, BOPBlocks.BOP_TROPICS_GRASS_BLOCK, BOPBlocks.BOP_TROPICS_GRASS_SLAB, BOPBlocks.GLOWING_BOP_TROPICS_GRASS_BLOCK, BOPBlocks.BOP_TROPICS_GRASS, BOPBlocks.BOP_TROPICS_FERN, BOPBlocks.TALL_BOP_TROPICS_GRASS, BOPBlocks.LARGE_BOP_TROPICS_FERN, BOPBlocks.BOP_TROPICS_SUGAR_CANE, BOPBlocks.POTTED_TROPICS_FERN, BOPBlocks.BOP_TROPICS_OVERGROWN_STONE, BOPBlocks.BOP_TROPICS_OVERGROWN_STONE_SLAB, BOPBlocks.BOP_TROPICS_OVERGROWN_DACITE, BOPBlocks.BOP_TROPICS_OVERGROWN_DACITE_SLAB, BOPBlocks.BOP_TROPICS_OVERGROWN_NETHERRACK, BOPBlocks.BOP_TROPICS_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerLeaveBlockColor(BOP_TROPICS, BOPBlocks.BOP_TROPICS_ACACIA_LEAVES, BOPBlocks.BOP_TROPICS_ACACIA_LEAVES_CARPET, BOPBlocks.BOP_TROPICS_OAK_LEAVES, BOPBlocks.BOP_TROPICS_OAK_LEAVES_CARPET, BOPBlocks.BOP_TROPICS_DARK_OAK_LEAVES, BOPBlocks.BOP_TROPICS_DARK_OAK_LEAVES_CARPET, BOPBlocks.BOP_TROPICS_JUNGLE_LEAVES, BOPBlocks.BOP_TROPICS_JUNGLE_LEAVES_CARPET, BOPBlocks.BOP_TROPICS_VINE);

        ColorUtils.registerGrassBlockColor(BOP_TUNDRA_GRASS, BOPBlocks.BOP_TUNDRA_GRASS_BLOCK, BOPBlocks.BOP_TUNDRA_GRASS_SLAB, BOPBlocks.GLOWING_BOP_TUNDRA_GRASS_BLOCK, BOPBlocks.BOP_TUNDRA_GRASS, BOPBlocks.BOP_TUNDRA_FERN, BOPBlocks.TALL_BOP_TUNDRA_GRASS, BOPBlocks.LARGE_BOP_TUNDRA_FERN, BOPBlocks.BOP_TUNDRA_SUGAR_CANE, BOPBlocks.POTTED_TUNDRA_FERN, BOPBlocks.BOP_TUNDRA_OVERGROWN_STONE, BOPBlocks.BOP_TUNDRA_OVERGROWN_STONE_SLAB, BOPBlocks.BOP_TUNDRA_OVERGROWN_DACITE, BOPBlocks.BOP_TUNDRA_OVERGROWN_DACITE_SLAB, BOPBlocks.BOP_TUNDRA_OVERGROWN_NETHERRACK, BOPBlocks.BOP_TUNDRA_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerLeaveBlockColor(BOP_TUNDRA_FOLIAGE, BOPBlocks.BOP_TUNDRA_ACACIA_LEAVES, BOPBlocks.BOP_TUNDRA_ACACIA_LEAVES_CARPET, BOPBlocks.BOP_TUNDRA_OAK_LEAVES, BOPBlocks.BOP_TUNDRA_OAK_LEAVES_CARPET, BOPBlocks.BOP_TUNDRA_DARK_OAK_LEAVES, BOPBlocks.BOP_TUNDRA_DARK_OAK_LEAVES_CARPET, BOPBlocks.BOP_TUNDRA_JUNGLE_LEAVES, BOPBlocks.BOP_TUNDRA_JUNGLE_LEAVES_CARPET, BOPBlocks.BOP_TUNDRA_VINE);

        ColorUtils.registerGrassBlockColor(BOP_VOLCANO_GRASS, BOPBlocks.BOP_VOLCANO_GRASS_BLOCK, BOPBlocks.BOP_VOLCANO_GRASS_SLAB, BOPBlocks.GLOWING_BOP_VOLCANO_GRASS_BLOCK, BOPBlocks.BOP_VOLCANO_GRASS, BOPBlocks.BOP_VOLCANO_FERN, BOPBlocks.TALL_BOP_VOLCANO_GRASS, BOPBlocks.LARGE_BOP_VOLCANO_FERN, BOPBlocks.BOP_VOLCANO_SUGAR_CANE, BOPBlocks.POTTED_VOLCANO_FERN, BOPBlocks.BOP_VOLCANO_OVERGROWN_STONE, BOPBlocks.BOP_VOLCANO_OVERGROWN_STONE_SLAB, BOPBlocks.BOP_VOLCANO_OVERGROWN_DACITE, BOPBlocks.BOP_VOLCANO_OVERGROWN_DACITE_SLAB, BOPBlocks.BOP_VOLCANO_OVERGROWN_NETHERRACK, BOPBlocks.BOP_VOLCANO_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerLeaveBlockColor(BOP_VOLCANO_FOLIAGE, BOPBlocks.BOP_VOLCANO_ACACIA_LEAVES, BOPBlocks.BOP_VOLCANO_ACACIA_LEAVES_CARPET, BOPBlocks.BOP_VOLCANO_OAK_LEAVES, BOPBlocks.BOP_VOLCANO_OAK_LEAVES_CARPET, BOPBlocks.BOP_VOLCANO_DARK_OAK_LEAVES, BOPBlocks.BOP_VOLCANO_DARK_OAK_LEAVES_CARPET, BOPBlocks.BOP_VOLCANO_JUNGLE_LEAVES, BOPBlocks.BOP_VOLCANO_JUNGLE_LEAVES_CARPET, BOPBlocks.BOP_VOLCANO_VINE);

        ColorUtils.registerGrassBlockColor(BOP_WASTELAND_GRASS, BOPBlocks.BOP_WASTELAND_GRASS_BLOCK, BOPBlocks.BOP_WASTELAND_GRASS_SLAB, BOPBlocks.GLOWING_BOP_WASTELAND_GRASS_BLOCK, BOPBlocks.BOP_WASTELAND_GRASS, BOPBlocks.BOP_WASTELAND_FERN, BOPBlocks.TALL_BOP_WASTELAND_GRASS, BOPBlocks.LARGE_BOP_WASTELAND_FERN, BOPBlocks.BOP_WASTELAND_SUGAR_CANE, BOPBlocks.POTTED_WASTELAND_FERN, BOPBlocks.BOP_WASTELAND_OVERGROWN_STONE, BOPBlocks.BOP_WASTELAND_OVERGROWN_STONE_SLAB, BOPBlocks.BOP_WASTELAND_OVERGROWN_DACITE, BOPBlocks.BOP_WASTELAND_OVERGROWN_DACITE_SLAB, BOPBlocks.BOP_WASTELAND_OVERGROWN_NETHERRACK, BOPBlocks.BOP_WASTELAND_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerLeaveBlockColor(BOP_WASTELAND_FOLIAGE, BOPBlocks.BOP_WASTELAND_ACACIA_LEAVES, BOPBlocks.BOP_WASTELAND_ACACIA_LEAVES_CARPET, BOPBlocks.BOP_WASTELAND_OAK_LEAVES, BOPBlocks.BOP_WASTELAND_OAK_LEAVES_CARPET, BOPBlocks.BOP_WASTELAND_DARK_OAK_LEAVES, BOPBlocks.BOP_WASTELAND_DARK_OAK_LEAVES_CARPET, BOPBlocks.BOP_WASTELAND_JUNGLE_LEAVES, BOPBlocks.BOP_WASTELAND_JUNGLE_LEAVES_CARPET, BOPBlocks.BOP_WASTELAND_VINE);

        ColorUtils.registerGrassBlockColor(BOP_WETLAND_GRASS, BOPBlocks.BOP_WETLAND_GRASS_BLOCK, BOPBlocks.BOP_WETLAND_GRASS_SLAB, BOPBlocks.GLOWING_BOP_WETLAND_GRASS_BLOCK, BOPBlocks.BOP_WETLAND_GRASS, BOPBlocks.BOP_WETLAND_FERN, BOPBlocks.TALL_BOP_WETLAND_GRASS, BOPBlocks.LARGE_BOP_WETLAND_FERN, BOPBlocks.BOP_WETLAND_SUGAR_CANE, BOPBlocks.POTTED_WETLAND_FERN, BOPBlocks.BOP_WETLAND_OVERGROWN_STONE, BOPBlocks.BOP_WETLAND_OVERGROWN_STONE_SLAB, BOPBlocks.BOP_WETLAND_OVERGROWN_DACITE, BOPBlocks.BOP_WETLAND_OVERGROWN_DACITE_SLAB, BOPBlocks.BOP_WETLAND_OVERGROWN_NETHERRACK, BOPBlocks.BOP_WETLAND_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerLeaveBlockColor(BOP_WETLAND_FOLIAGE, BOPBlocks.BOP_WETLAND_ACACIA_LEAVES, BOPBlocks.BOP_WETLAND_ACACIA_LEAVES_CARPET, BOPBlocks.BOP_WETLAND_OAK_LEAVES, BOPBlocks.BOP_WETLAND_OAK_LEAVES_CARPET, BOPBlocks.BOP_WETLAND_DARK_OAK_LEAVES, BOPBlocks.BOP_WETLAND_DARK_OAK_LEAVES_CARPET, BOPBlocks.BOP_WETLAND_JUNGLE_LEAVES, BOPBlocks.BOP_WETLAND_JUNGLE_LEAVES_CARPET, BOPBlocks.BOP_WETLAND_VINE);




        ColorUtils.registerItemColor(BOP_BAMBOO_BLOSSOM_GROVE_ITEM, BOPItems.BOP_BAMBOO_BLOSSOM_GROVE_GRASS_BLOCK, BOPItems.BOP_BAMBOO_BLOSSOM_GROVE_GRASS_SLAB, BOPItems.GLOWING_BOP_BAMBOO_BLOSSOM_GROVE_GRASS_BLOCK, BOPItems.BOP_BAMBOO_BLOSSOM_GROVE_GRASS, BOPItems.BOP_BAMBOO_BLOSSOM_GROVE_FERN, BOPItems.TALL_BOP_BAMBOO_BLOSSOM_GROVE_GRASS, BOPItems.LARGE_BOP_BAMBOO_BLOSSOM_GROVE_FERN, BOPItems.BOP_BAMBOO_BLOSSOM_GROVE_SUGAR_CANE, BOPItems.BOP_BAMBOO_BLOSSOM_GROVE_OVERGROWN_STONE, BOPItems.BOP_BAMBOO_BLOSSOM_GROVE_OVERGROWN_STONE_SLAB, BOPItems.BOP_BAMBOO_BLOSSOM_GROVE_OVERGROWN_DACITE, BOPItems.BOP_BAMBOO_BLOSSOM_GROVE_OVERGROWN_DACITE_SLAB, BOPItems.BOP_BAMBOO_BLOSSOM_GROVE_OVERGROWN_NETHERRACK, BOPItems.BOP_BAMBOO_BLOSSOM_GROVE_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerItemColor(BOP_BAMBOO_BLOSSOM_GROVE_ITEM, BOPItems.BOP_BAMBOO_BLOSSOM_GROVE_ACACIA_LEAVES, BOPItems.BOP_BAMBOO_BLOSSOM_GROVE_ACACIA_LEAVES_CARPET, BOPItems.BOP_BAMBOO_BLOSSOM_GROVE_OAK_LEAVES, BOPItems.BOP_BAMBOO_BLOSSOM_GROVE_OAK_LEAVES_CARPET, BOPItems.BOP_BAMBOO_BLOSSOM_GROVE_DARK_OAK_LEAVES, BOPItems.BOP_BAMBOO_BLOSSOM_GROVE_DARK_OAK_LEAVES_CARPET, BOPItems.BOP_BAMBOO_BLOSSOM_GROVE_JUNGLE_LEAVES, BOPItems.BOP_BAMBOO_BLOSSOM_GROVE_JUNGLE_LEAVES_CARPET, BOPItems.BOP_BAMBOO_BLOSSOM_GROVE_VINE);

        ColorUtils.registerItemColor(BOP_BAYOU_GRASS_ITEM, BOPItems.BOP_BAYOU_GRASS_BLOCK, BOPItems.BOP_BAYOU_GRASS_SLAB, BOPItems.GLOWING_BOP_BAYOU_GRASS_BLOCK, BOPItems.BOP_BAYOU_GRASS, BOPItems.BOP_BAYOU_FERN, BOPItems.TALL_BOP_BAYOU_GRASS, BOPItems.LARGE_BOP_BAYOU_FERN, BOPItems.BOP_BAYOU_SUGAR_CANE, BOPItems.BOP_BAYOU_OVERGROWN_STONE, BOPItems.BOP_BAYOU_OVERGROWN_STONE_SLAB, BOPItems.BOP_BAYOU_OVERGROWN_DACITE, BOPItems.BOP_BAYOU_OVERGROWN_DACITE_SLAB, BOPItems.BOP_BAYOU_OVERGROWN_NETHERRACK, BOPItems.BOP_BAYOU_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerItemColor(BOP_BAYOU_FOLIAGE_ITEM, BOPItems.BOP_BAYOU_ACACIA_LEAVES, BOPItems.BOP_BAYOU_ACACIA_LEAVES_CARPET, BOPItems.BOP_BAYOU_OAK_LEAVES, BOPItems.BOP_BAYOU_OAK_LEAVES_CARPET, BOPItems.BOP_BAYOU_DARK_OAK_LEAVES, BOPItems.BOP_BAYOU_DARK_OAK_LEAVES_CARPET, BOPItems.BOP_BAYOU_JUNGLE_LEAVES, BOPItems.BOP_BAYOU_JUNGLE_LEAVES_CARPET, BOPItems.BOP_BAYOU_VINE);

        ColorUtils.registerItemColor(BOP_BURNT_FOREST_GRASS_ITEM, BOPItems.BOP_BURNT_FOREST_GRASS_BLOCK, BOPItems.BOP_BURNT_FOREST_GRASS_SLAB, BOPItems.GLOWING_BOP_BURNT_FOREST_GRASS_BLOCK, BOPItems.BOP_BURNT_FOREST_GRASS, BOPItems.BOP_BURNT_FOREST_FERN, BOPItems.TALL_BOP_BURNT_FOREST_GRASS, BOPItems.LARGE_BOP_BURNT_FOREST_FERN, BOPItems.BOP_BURNT_FOREST_SUGAR_CANE, BOPItems.BOP_BURNT_FOREST_OVERGROWN_STONE, BOPItems.BOP_BURNT_FOREST_OVERGROWN_STONE_SLAB, BOPItems.BOP_BURNT_FOREST_OVERGROWN_DACITE, BOPItems.BOP_BURNT_FOREST_OVERGROWN_DACITE_SLAB, BOPItems.BOP_BURNT_FOREST_OVERGROWN_NETHERRACK, BOPItems.BOP_BURNT_FOREST_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerItemColor(BOP_BURNT_FOREST_FOLIAGE_ITEM, BOPItems.BOP_BURNT_FOREST_ACACIA_LEAVES, BOPItems.BOP_BURNT_FOREST_ACACIA_LEAVES_CARPET, BOPItems.BOP_BURNT_FOREST_OAK_LEAVES, BOPItems.BOP_BURNT_FOREST_OAK_LEAVES_CARPET, BOPItems.BOP_BURNT_FOREST_DARK_OAK_LEAVES, BOPItems.BOP_BURNT_FOREST_DARK_OAK_LEAVES_CARPET, BOPItems.BOP_BURNT_FOREST_JUNGLE_LEAVES, BOPItems.BOP_BURNT_FOREST_JUNGLE_LEAVES_CARPET, BOPItems.BOP_BURNT_FOREST_VINE);

        ColorUtils.registerItemColor(BOP_CHERRY_BLOSSOM_GROVE_GRASS_ITEM, BOPItems.BOP_CHERRY_BLOSSOM_GROVE_GRASS_BLOCK, BOPItems.BOP_CHERRY_BLOSSOM_GROVE_GRASS_SLAB, BOPItems.GLOWING_BOP_CHERRY_BLOSSOM_GROVE_GRASS_BLOCK, BOPItems.BOP_CHERRY_BLOSSOM_GROVE_GRASS, BOPItems.BOP_CHERRY_BLOSSOM_GROVE_FERN, BOPItems.TALL_BOP_CHERRY_BLOSSOM_GROVE_GRASS, BOPItems.LARGE_BOP_CHERRY_BLOSSOM_GROVE_FERN, BOPItems.BOP_CHERRY_BLOSSOM_GROVE_SUGAR_CANE, BOPItems.BOP_CHERRY_BLOSSOM_GROVE_OVERGROWN_STONE, BOPItems.BOP_CHERRY_BLOSSOM_GROVE_OVERGROWN_STONE_SLAB, BOPItems.BOP_CHERRY_BLOSSOM_GROVE_OVERGROWN_DACITE, BOPItems.BOP_CHERRY_BLOSSOM_GROVE_OVERGROWN_DACITE_SLAB, BOPItems.BOP_CHERRY_BLOSSOM_GROVE_OVERGROWN_NETHERRACK, BOPItems.BOP_CHERRY_BLOSSOM_GROVE_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerItemColor(BOP_CHERRY_BLOSSOM_GROVE_FOLIAGE_ITEM, BOPItems.BOP_CHERRY_BLOSSOM_GROVE_ACACIA_LEAVES, BOPItems.BOP_CHERRY_BLOSSOM_GROVE_ACACIA_LEAVES_CARPET, BOPItems.BOP_CHERRY_BLOSSOM_GROVE_OAK_LEAVES, BOPItems.BOP_CHERRY_BLOSSOM_GROVE_OAK_LEAVES_CARPET, BOPItems.BOP_CHERRY_BLOSSOM_GROVE_DARK_OAK_LEAVES, BOPItems.BOP_CHERRY_BLOSSOM_GROVE_DARK_OAK_LEAVES_CARPET, BOPItems.BOP_CHERRY_BLOSSOM_GROVE_JUNGLE_LEAVES, BOPItems.BOP_CHERRY_BLOSSOM_GROVE_JUNGLE_LEAVES_CARPET, BOPItems.BOP_CHERRY_BLOSSOM_GROVE_VINE);

        ColorUtils.registerItemColor(BOP_CONIFEROUS_FOREST_ITEM, BOPItems.BOP_CONIFEROUS_FOREST_GRASS_BLOCK, BOPItems.BOP_CONIFEROUS_FOREST_GRASS_SLAB, BOPItems.GLOWING_BOP_CONIFEROUS_FOREST_GRASS_BLOCK, BOPItems.BOP_CONIFEROUS_FOREST_GRASS, BOPItems.BOP_CONIFEROUS_FOREST_FERN, BOPItems.TALL_BOP_CONIFEROUS_FOREST_GRASS, BOPItems.LARGE_BOP_CONIFEROUS_FOREST_FERN, BOPItems.BOP_CONIFEROUS_FOREST_SUGAR_CANE,BOPItems.BOP_CONIFEROUS_FOREST_OVERGROWN_STONE, BOPItems.BOP_CONIFEROUS_FOREST_OVERGROWN_STONE_SLAB, BOPItems.BOP_CONIFEROUS_FOREST_OVERGROWN_DACITE, BOPItems.BOP_CONIFEROUS_FOREST_OVERGROWN_DACITE_SLAB, BOPItems.BOP_CONIFEROUS_FOREST_OVERGROWN_NETHERRACK, BOPItems.BOP_CONIFEROUS_FOREST_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerItemColor(BOP_CONIFEROUS_FOREST_ITEM, BOPItems.BOP_CONIFEROUS_FOREST_ACACIA_LEAVES, BOPItems.BOP_CONIFEROUS_FOREST_ACACIA_LEAVES_CARPET, BOPItems.BOP_CONIFEROUS_FOREST_OAK_LEAVES, BOPItems.BOP_CONIFEROUS_FOREST_OAK_LEAVES_CARPET, BOPItems.BOP_CONIFEROUS_FOREST_DARK_OAK_LEAVES, BOPItems.BOP_CONIFEROUS_FOREST_DARK_OAK_LEAVES_CARPET, BOPItems.BOP_CONIFEROUS_FOREST_JUNGLE_LEAVES, BOPItems.BOP_CONIFEROUS_FOREST_JUNGLE_LEAVES_CARPET, BOPItems.BOP_CONIFEROUS_FOREST_VINE);

        ColorUtils.registerItemColor(BOP_DEAD_FOREST_GRASS_ITEM, BOPItems.BOP_DEAD_FOREST_GRASS_BLOCK, BOPItems.BOP_DEAD_FOREST_GRASS_SLAB, BOPItems.GLOWING_BOP_DEAD_FOREST_GRASS_BLOCK, BOPItems.BOP_DEAD_FOREST_GRASS, BOPItems.BOP_DEAD_FOREST_FERN, BOPItems.TALL_BOP_DEAD_FOREST_GRASS, BOPItems.LARGE_BOP_DEAD_FOREST_FERN, BOPItems.BOP_DEAD_FOREST_SUGAR_CANE, BOPItems.BOP_DEAD_FOREST_OVERGROWN_STONE, BOPItems.BOP_DEAD_FOREST_OVERGROWN_STONE_SLAB, BOPItems.BOP_DEAD_FOREST_OVERGROWN_DACITE, BOPItems.BOP_DEAD_FOREST_OVERGROWN_DACITE_SLAB, BOPItems.BOP_DEAD_FOREST_OVERGROWN_NETHERRACK, BOPItems.BOP_DEAD_FOREST_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerItemColor(BOP_DEAD_FOREST_FOLIAGE_ITEM, BOPItems.BOP_DEAD_FOREST_ACACIA_LEAVES, BOPItems.BOP_DEAD_FOREST_ACACIA_LEAVES_CARPET, BOPItems.BOP_DEAD_FOREST_OAK_LEAVES, BOPItems.BOP_DEAD_FOREST_OAK_LEAVES_CARPET, BOPItems.BOP_DEAD_FOREST_DARK_OAK_LEAVES, BOPItems.BOP_DEAD_FOREST_DARK_OAK_LEAVES_CARPET, BOPItems.BOP_DEAD_FOREST_JUNGLE_LEAVES, BOPItems.BOP_DEAD_FOREST_JUNGLE_LEAVES_CARPET, BOPItems.BOP_DEAD_FOREST_VINE);

        ColorUtils.registerItemColor(BOP_WOODLAND_GRASS_ITEM, BOPItems.BOP_WOODLAND_GRASS_BLOCK, BOPItems.BOP_WOODLAND_GRASS_SLAB, BOPItems.GLOWING_BOP_WOODLAND_GRASS_BLOCK, BOPItems.BOP_WOODLAND_GRASS, BOPItems.BOP_WOODLAND_FERN, BOPItems.TALL_BOP_WOODLAND_GRASS, BOPItems.LARGE_BOP_WOODLAND_FERN, BOPItems.BOP_WOODLAND_SUGAR_CANE, BOPItems.BOP_WOODLAND_OVERGROWN_STONE, BOPItems.BOP_WOODLAND_OVERGROWN_STONE_SLAB, BOPItems.BOP_WOODLAND_OVERGROWN_DACITE, BOPItems.BOP_WOODLAND_OVERGROWN_DACITE_SLAB, BOPItems.BOP_WOODLAND_OVERGROWN_NETHERRACK, BOPItems.BOP_WOODLAND_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerItemColor(BOP_WOODLAND_FOLIAGE_ITEM, BOPItems.BOP_WOODLAND_ACACIA_LEAVES, BOPItems.BOP_WOODLAND_ACACIA_LEAVES_CARPET, BOPItems.BOP_WOODLAND_OAK_LEAVES, BOPItems.BOP_WOODLAND_OAK_LEAVES_CARPET, BOPItems.BOP_WOODLAND_DARK_OAK_LEAVES, BOPItems.BOP_WOODLAND_DARK_OAK_LEAVES_CARPET, BOPItems.BOP_WOODLAND_JUNGLE_LEAVES, BOPItems.BOP_WOODLAND_JUNGLE_LEAVES_CARPET, BOPItems.BOP_WOODLAND_VINE);

        ColorUtils.registerItemColor(BOP_DRYLAND_GRASS_ITEM, BOPItems.BOP_DRYLAND_GRASS_BLOCK, BOPItems.BOP_DRYLAND_GRASS_SLAB, BOPItems.GLOWING_BOP_DRYLAND_GRASS_BLOCK, BOPItems.BOP_DRYLAND_GRASS, BOPItems.BOP_DRYLAND_FERN, BOPItems.TALL_BOP_DRYLAND_GRASS, BOPItems.LARGE_BOP_DRYLAND_FERN, BOPItems.BOP_DRYLAND_SUGAR_CANE, BOPItems.BOP_DRYLAND_OVERGROWN_STONE, BOPItems.BOP_DRYLAND_OVERGROWN_STONE_SLAB, BOPItems.BOP_DRYLAND_OVERGROWN_DACITE, BOPItems.BOP_DRYLAND_OVERGROWN_DACITE_SLAB, BOPItems.BOP_DRYLAND_OVERGROWN_NETHERRACK, BOPItems.BOP_DRYLAND_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerItemColor(BOP_DRYLAND_FOLIAGE_ITEM, BOPItems.BOP_DRYLAND_ACACIA_LEAVES, BOPItems.BOP_DRYLAND_ACACIA_LEAVES_CARPET, BOPItems.BOP_DRYLAND_OAK_LEAVES, BOPItems.BOP_DRYLAND_OAK_LEAVES_CARPET, BOPItems.BOP_DRYLAND_DARK_OAK_LEAVES, BOPItems.BOP_DRYLAND_DARK_OAK_LEAVES_CARPET, BOPItems.BOP_DRYLAND_JUNGLE_LEAVES, BOPItems.BOP_DRYLAND_JUNGLE_LEAVES_CARPET, BOPItems.BOP_DRYLAND_VINE);

        ColorUtils.registerItemColor(BOP_FUNGAL_FIELD_GRASS_ITEM, BOPItems.BOP_FUNGAL_FIELD_GRASS_BLOCK, BOPItems.BOP_FUNGAL_FIELD_GRASS_SLAB, BOPItems.GLOWING_BOP_FUNGAL_FIELD_GRASS_BLOCK, BOPItems.BOP_FUNGAL_FIELD_GRASS, BOPItems.BOP_FUNGAL_FIELD_FERN, BOPItems.TALL_BOP_FUNGAL_FIELD_GRASS, BOPItems.LARGE_BOP_FUNGAL_FIELD_FERN, BOPItems.BOP_FUNGAL_FIELD_SUGAR_CANE, BOPItems.BOP_FUNGAL_FIELD_OVERGROWN_STONE, BOPItems.BOP_FUNGAL_FIELD_OVERGROWN_STONE_SLAB, BOPItems.BOP_FUNGAL_FIELD_OVERGROWN_DACITE, BOPItems.BOP_FUNGAL_FIELD_OVERGROWN_DACITE_SLAB, BOPItems.BOP_FUNGAL_FIELD_OVERGROWN_NETHERRACK, BOPItems.BOP_FUNGAL_FIELD_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerItemColor(BOP_FUNGAL_FIELD_FOLIAGE_ITEM, BOPItems.BOP_FUNGAL_FIELD_ACACIA_LEAVES, BOPItems.BOP_FUNGAL_FIELD_ACACIA_LEAVES_CARPET, BOPItems.BOP_FUNGAL_FIELD_OAK_LEAVES, BOPItems.BOP_FUNGAL_FIELD_OAK_LEAVES_CARPET, BOPItems.BOP_FUNGAL_FIELD_DARK_OAK_LEAVES, BOPItems.BOP_FUNGAL_FIELD_DARK_OAK_LEAVES_CARPET, BOPItems.BOP_FUNGAL_FIELD_JUNGLE_LEAVES, BOPItems.BOP_FUNGAL_FIELD_JUNGLE_LEAVES_CARPET, BOPItems.BOP_FUNGAL_FIELD_VINE);

        ColorUtils.registerItemColor(BOP_FUNGAL_FIELD_VARIANT_GRASS_ITEM, BOPItems.BOP_FUNGAL_FIELD_VARIANT_GRASS_BLOCK, BOPItems.BOP_FUNGAL_FIELD_VARIANT_GRASS_SLAB, BOPItems.GLOWING_BOP_FUNGAL_FIELD_VARIANT_GRASS_BLOCK, BOPItems.BOP_FUNGAL_FIELD_VARIANT_GRASS, BOPItems.BOP_FUNGAL_FIELD_VARIANT_FERN, BOPItems.TALL_BOP_FUNGAL_FIELD_VARIANT_GRASS, BOPItems.LARGE_BOP_FUNGAL_FIELD_VARIANT_FERN, BOPItems.BOP_FUNGAL_FIELD_VARIANT_SUGAR_CANE, BOPItems.BOP_FUNGAL_FIELD_VARIANT_OVERGROWN_STONE, BOPItems.BOP_FUNGAL_FIELD_VARIANT_OVERGROWN_STONE_SLAB, BOPItems.BOP_FUNGAL_FIELD_VARIANT_OVERGROWN_DACITE, BOPItems.BOP_FUNGAL_FIELD_VARIANT_OVERGROWN_DACITE_SLAB, BOPItems.BOP_FUNGAL_FIELD_VARIANT_OVERGROWN_NETHERRACK, BOPItems.BOP_FUNGAL_FIELD_VARIANT_OVERGROWN_NETHERRACK_SLAB);

        ColorUtils.registerItemColor(BOP_GRAVEL_BEACH_ITEM, BOPItems.BOP_GRAVEL_BEACH_GRASS_BLOCK, BOPItems.BOP_GRAVEL_BEACH_GRASS_SLAB, BOPItems.GLOWING_BOP_GRAVEL_BEACH_GRASS_BLOCK, BOPItems.BOP_GRAVEL_BEACH_GRASS, BOPItems.BOP_GRAVEL_BEACH_FERN, BOPItems.TALL_BOP_GRAVEL_BEACH_GRASS, BOPItems.LARGE_BOP_GRAVEL_BEACH_FERN, BOPItems.BOP_GRAVEL_BEACH_SUGAR_CANE, BOPItems.BOP_GRAVEL_BEACH_OVERGROWN_STONE, BOPItems.BOP_GRAVEL_BEACH_OVERGROWN_STONE_SLAB, BOPItems.BOP_GRAVEL_BEACH_OVERGROWN_DACITE, BOPItems.BOP_GRAVEL_BEACH_OVERGROWN_DACITE_SLAB, BOPItems.BOP_GRAVEL_BEACH_OVERGROWN_NETHERRACK, BOPItems.BOP_GRAVEL_BEACH_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerItemColor(BOP_GRAVEL_BEACH_ITEM, BOPItems.BOP_GRAVEL_BEACH_ACACIA_LEAVES, BOPItems.BOP_GRAVEL_BEACH_ACACIA_LEAVES_CARPET, BOPItems.BOP_GRAVEL_BEACH_OAK_LEAVES, BOPItems.BOP_GRAVEL_BEACH_OAK_LEAVES_CARPET, BOPItems.BOP_GRAVEL_BEACH_DARK_OAK_LEAVES, BOPItems.BOP_GRAVEL_BEACH_DARK_OAK_LEAVES_CARPET, BOPItems.BOP_GRAVEL_BEACH_JUNGLE_LEAVES, BOPItems.BOP_GRAVEL_BEACH_JUNGLE_LEAVES_CARPET, BOPItems.BOP_GRAVEL_BEACH_VINE);

        ColorUtils.registerItemColor(BOP_GROVE_ITEM, BOPItems.BOP_GROVE_GRASS_BLOCK, BOPItems.BOP_GROVE_GRASS_SLAB, BOPItems.GLOWING_BOP_GROVE_GRASS_BLOCK, BOPItems.BOP_GROVE_GRASS, BOPItems.BOP_GROVE_FERN, BOPItems.TALL_BOP_GROVE_GRASS, BOPItems.LARGE_BOP_GROVE_FERN, BOPItems.BOP_GROVE_SUGAR_CANE, BOPItems.BOP_GROVE_OVERGROWN_STONE, BOPItems.BOP_GROVE_OVERGROWN_STONE_SLAB, BOPItems.BOP_GROVE_OVERGROWN_DACITE, BOPItems.BOP_GROVE_OVERGROWN_DACITE_SLAB, BOPItems.BOP_GROVE_OVERGROWN_NETHERRACK, BOPItems.BOP_GROVE_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerItemColor(BOP_GROVE_ITEM, BOPItems.BOP_GROVE_ACACIA_LEAVES, BOPItems.BOP_GROVE_ACACIA_LEAVES_CARPET, BOPItems.BOP_GROVE_OAK_LEAVES, BOPItems.BOP_GROVE_OAK_LEAVES_CARPET, BOPItems.BOP_GROVE_DARK_OAK_LEAVES, BOPItems.BOP_GROVE_DARK_OAK_LEAVES_CARPET, BOPItems.BOP_GROVE_JUNGLE_LEAVES, BOPItems.BOP_GROVE_JUNGLE_LEAVES_CARPET, BOPItems.BOP_GROVE_VINE);

        ColorUtils.registerItemColor(BOP_JADE_CLIFFS_GRASS_ITEM, BOPItems.BOP_JADE_CLIFFS_GRASS_BLOCK, BOPItems.BOP_JADE_CLIFFS_GRASS_SLAB, BOPItems.GLOWING_BOP_JADE_CLIFFS_GRASS_BLOCK, BOPItems.BOP_JADE_CLIFFS_GRASS, BOPItems.BOP_JADE_CLIFFS_FERN, BOPItems.TALL_BOP_JADE_CLIFFS_GRASS, BOPItems.LARGE_BOP_JADE_CLIFFS_FERN, BOPItems.BOP_JADE_CLIFFS_SUGAR_CANE, BOPItems.BOP_JADE_CLIFFS_OVERGROWN_STONE, BOPItems.BOP_JADE_CLIFFS_OVERGROWN_STONE_SLAB, BOPItems.BOP_JADE_CLIFFS_OVERGROWN_DACITE, BOPItems.BOP_JADE_CLIFFS_OVERGROWN_DACITE_SLAB, BOPItems.BOP_JADE_CLIFFS_OVERGROWN_NETHERRACK, BOPItems.BOP_JADE_CLIFFS_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerItemColor(BOP_JADE_CLIFFS_FOLIAGE_ITEM, BOPItems.BOP_JADE_CLIFFS_ACACIA_LEAVES, BOPItems.BOP_JADE_CLIFFS_ACACIA_LEAVES_CARPET, BOPItems.BOP_JADE_CLIFFS_OAK_LEAVES, BOPItems.BOP_JADE_CLIFFS_OAK_LEAVES_CARPET, BOPItems.BOP_JADE_CLIFFS_DARK_OAK_LEAVES, BOPItems.BOP_JADE_CLIFFS_DARK_OAK_LEAVES_CARPET, BOPItems.BOP_JADE_CLIFFS_JUNGLE_LEAVES, BOPItems.BOP_JADE_CLIFFS_JUNGLE_LEAVES_CARPET, BOPItems.BOP_JADE_CLIFFS_VINE);

        ColorUtils.registerItemColor(BOP_LAVENDER_FIELD_ITEM, BOPItems.BOP_LAVENDER_FIELD_GRASS_BLOCK, BOPItems.BOP_LAVENDER_FIELD_GRASS_SLAB, BOPItems.GLOWING_BOP_LAVENDER_FIELD_GRASS_BLOCK, BOPItems.BOP_LAVENDER_FIELD_GRASS, BOPItems.BOP_LAVENDER_FIELD_FERN, BOPItems.TALL_BOP_LAVENDER_FIELD_GRASS, BOPItems.LARGE_BOP_LAVENDER_FIELD_FERN, BOPItems.BOP_LAVENDER_FIELD_SUGAR_CANE, BOPItems.BOP_LAVENDER_FIELD_OVERGROWN_STONE, BOPItems.BOP_LAVENDER_FIELD_OVERGROWN_STONE_SLAB, BOPItems.BOP_LAVENDER_FIELD_OVERGROWN_DACITE, BOPItems.BOP_LAVENDER_FIELD_OVERGROWN_DACITE_SLAB, BOPItems.BOP_LAVENDER_FIELD_OVERGROWN_NETHERRACK, BOPItems.BOP_LAVENDER_FIELD_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerItemColor(BOP_LAVENDER_FIELD_ITEM, BOPItems.BOP_LAVENDER_FIELD_ACACIA_LEAVES, BOPItems.BOP_LAVENDER_FIELD_ACACIA_LEAVES_CARPET, BOPItems.BOP_LAVENDER_FIELD_OAK_LEAVES, BOPItems.BOP_LAVENDER_FIELD_OAK_LEAVES_CARPET, BOPItems.BOP_LAVENDER_FIELD_DARK_OAK_LEAVES, BOPItems.BOP_LAVENDER_FIELD_DARK_OAK_LEAVES_CARPET, BOPItems.BOP_LAVENDER_FIELD_JUNGLE_LEAVES, BOPItems.BOP_LAVENDER_FIELD_JUNGLE_LEAVES_CARPET, BOPItems.BOP_LAVENDER_FIELD_VINE);

        ColorUtils.registerItemColor(BOP_LUSH_DESERT_GRASS_ITEM, BOPItems.BOP_LUSH_DESERT_GRASS_BLOCK, BOPItems.BOP_LUSH_DESERT_GRASS_SLAB, BOPItems.GLOWING_BOP_LUSH_DESERT_GRASS_BLOCK, BOPItems.BOP_LUSH_DESERT_GRASS, BOPItems.BOP_LUSH_DESERT_FERN, BOPItems.TALL_BOP_LUSH_DESERT_GRASS, BOPItems.LARGE_BOP_LUSH_DESERT_FERN, BOPItems.BOP_LUSH_DESERT_SUGAR_CANE, BOPItems.BOP_LUSH_DESERT_OVERGROWN_STONE, BOPItems.BOP_LUSH_DESERT_OVERGROWN_STONE_SLAB, BOPItems.BOP_LUSH_DESERT_OVERGROWN_DACITE, BOPItems.BOP_LUSH_DESERT_OVERGROWN_DACITE_SLAB, BOPItems.BOP_LUSH_DESERT_OVERGROWN_NETHERRACK, BOPItems.BOP_LUSH_DESERT_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerItemColor(BOP_LUSH_DESERT_FOLIAGE_ITEM, BOPItems.BOP_LUSH_DESERT_ACACIA_LEAVES, BOPItems.BOP_LUSH_DESERT_ACACIA_LEAVES_CARPET, BOPItems.BOP_LUSH_DESERT_OAK_LEAVES, BOPItems.BOP_LUSH_DESERT_OAK_LEAVES_CARPET, BOPItems.BOP_LUSH_DESERT_DARK_OAK_LEAVES, BOPItems.BOP_LUSH_DESERT_DARK_OAK_LEAVES_CARPET, BOPItems.BOP_LUSH_DESERT_JUNGLE_LEAVES, BOPItems.BOP_LUSH_DESERT_JUNGLE_LEAVES_CARPET, BOPItems.BOP_LUSH_DESERT_VINE);

        ColorUtils.registerItemColor(BOP_MARSH_ITEM, BOPItems.BOP_MARSH_GRASS_BLOCK, BOPItems.BOP_MARSH_GRASS_SLAB, BOPItems.GLOWING_BOP_MARSH_GRASS_BLOCK, BOPItems.BOP_MARSH_GRASS, BOPItems.BOP_MARSH_FERN, BOPItems.TALL_BOP_MARSH_GRASS, BOPItems.LARGE_BOP_MARSH_FERN, BOPItems.BOP_MARSH_SUGAR_CANE, BOPItems.BOP_MARSH_OVERGROWN_STONE, BOPItems.BOP_MARSH_OVERGROWN_STONE_SLAB, BOPItems.BOP_MARSH_OVERGROWN_DACITE, BOPItems.BOP_MARSH_OVERGROWN_DACITE_SLAB, BOPItems.BOP_MARSH_OVERGROWN_NETHERRACK, BOPItems.BOP_MARSH_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerItemColor(BOP_MARSH_ITEM, BOPItems.BOP_MARSH_ACACIA_LEAVES, BOPItems.BOP_MARSH_ACACIA_LEAVES_CARPET, BOPItems.BOP_MARSH_OAK_LEAVES, BOPItems.BOP_MARSH_OAK_LEAVES_CARPET, BOPItems.BOP_MARSH_DARK_OAK_LEAVES, BOPItems.BOP_MARSH_DARK_OAK_LEAVES_CARPET, BOPItems.BOP_MARSH_JUNGLE_LEAVES, BOPItems.BOP_MARSH_JUNGLE_LEAVES_CARPET, BOPItems.BOP_MARSH_VINE);

        ColorUtils.registerItemColor(BOP_MEADOW_ITEM, BOPItems.BOP_MEADOW_GRASS_BLOCK, BOPItems.BOP_MEADOW_GRASS_SLAB, BOPItems.GLOWING_BOP_MEADOW_GRASS_BLOCK, BOPItems.BOP_MEADOW_GRASS, BOPItems.BOP_MEADOW_FERN, BOPItems.TALL_BOP_MEADOW_GRASS, BOPItems.LARGE_BOP_MEADOW_FERN, BOPItems.BOP_MEADOW_SUGAR_CANE, BOPItems.BOP_MEADOW_OVERGROWN_STONE, BOPItems.BOP_MEADOW_OVERGROWN_STONE_SLAB, BOPItems.BOP_MEADOW_OVERGROWN_DACITE, BOPItems.BOP_MEADOW_OVERGROWN_DACITE_SLAB, BOPItems.BOP_MEADOW_OVERGROWN_NETHERRACK, BOPItems.BOP_MEADOW_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerItemColor(BOP_MEADOW_ITEM, BOPItems.BOP_MEADOW_ACACIA_LEAVES, BOPItems.BOP_MEADOW_ACACIA_LEAVES_CARPET, BOPItems.BOP_MEADOW_OAK_LEAVES, BOPItems.BOP_MEADOW_OAK_LEAVES_CARPET, BOPItems.BOP_MEADOW_DARK_OAK_LEAVES, BOPItems.BOP_MEADOW_DARK_OAK_LEAVES_CARPET, BOPItems.BOP_MEADOW_JUNGLE_LEAVES, BOPItems.BOP_MEADOW_JUNGLE_LEAVES_CARPET, BOPItems.BOP_MEADOW_VINE);

        ColorUtils.registerItemColor(BOP_MUSKEG_GRASS_ITEM, BOPItems.BOP_MUSKEG_GRASS_BLOCK, BOPItems.BOP_MUSKEG_GRASS_SLAB, BOPItems.GLOWING_BOP_MUSKEG_GRASS_BLOCK, BOPItems.BOP_MUSKEG_GRASS, BOPItems.BOP_MUSKEG_FERN, BOPItems.TALL_BOP_MUSKEG_GRASS, BOPItems.LARGE_BOP_MUSKEG_FERN, BOPItems.BOP_MUSKEG_SUGAR_CANE, BOPItems.BOP_MUSKEG_OVERGROWN_STONE, BOPItems.BOP_MUSKEG_OVERGROWN_STONE_SLAB, BOPItems.BOP_MUSKEG_OVERGROWN_DACITE, BOPItems.BOP_MUSKEG_OVERGROWN_DACITE_SLAB, BOPItems.BOP_MUSKEG_OVERGROWN_NETHERRACK, BOPItems.BOP_MUSKEG_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerItemColor(BOP_MUSKEG_FOLIAGE_ITEM, BOPItems.BOP_MUSKEG_ACACIA_LEAVES, BOPItems.BOP_MUSKEG_ACACIA_LEAVES_CARPET, BOPItems.BOP_MUSKEG_OAK_LEAVES, BOPItems.BOP_MUSKEG_OAK_LEAVES_CARPET, BOPItems.BOP_MUSKEG_DARK_OAK_LEAVES, BOPItems.BOP_MUSKEG_DARK_OAK_LEAVES_CARPET, BOPItems.BOP_MUSKEG_JUNGLE_LEAVES, BOPItems.BOP_MUSKEG_JUNGLE_LEAVES_CARPET, BOPItems.BOP_MUSKEG_VINE);

        ColorUtils.registerItemColor(BOP_MYSTIC_GROVE_GRASS_ITEM, BOPItems.BOP_MYSTIC_GROVE_GRASS_BLOCK, BOPItems.BOP_MYSTIC_GROVE_GRASS_SLAB, BOPItems.GLOWING_BOP_MYSTIC_GROVE_GRASS_BLOCK, BOPItems.BOP_MYSTIC_GROVE_GRASS, BOPItems.BOP_MYSTIC_GROVE_FERN, BOPItems.TALL_BOP_MYSTIC_GROVE_GRASS, BOPItems.LARGE_BOP_MYSTIC_GROVE_FERN, BOPItems.BOP_MYSTIC_GROVE_SUGAR_CANE, BOPItems.BOP_MYSTIC_GROVE_OVERGROWN_STONE, BOPItems.BOP_MYSTIC_GROVE_OVERGROWN_STONE_SLAB, BOPItems.BOP_MYSTIC_GROVE_OVERGROWN_DACITE, BOPItems.BOP_MYSTIC_GROVE_OVERGROWN_DACITE_SLAB, BOPItems.BOP_MYSTIC_GROVE_OVERGROWN_NETHERRACK, BOPItems.BOP_MYSTIC_GROVE_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerItemColor(BOP_MYSTIC_GROVE_FOLIAGE_ITEM, BOPItems.BOP_MYSTIC_GROVE_ACACIA_LEAVES, BOPItems.BOP_MYSTIC_GROVE_ACACIA_LEAVES_CARPET, BOPItems.BOP_MYSTIC_GROVE_OAK_LEAVES, BOPItems.BOP_MYSTIC_GROVE_OAK_LEAVES_CARPET, BOPItems.BOP_MYSTIC_GROVE_DARK_OAK_LEAVES, BOPItems.BOP_MYSTIC_GROVE_DARK_OAK_LEAVES_CARPET, BOPItems.BOP_MYSTIC_GROVE_JUNGLE_LEAVES, BOPItems.BOP_MYSTIC_GROVE_JUNGLE_LEAVES_CARPET, BOPItems.BOP_MYSTIC_GROVE_VINE);

        ColorUtils.registerItemColor(BOP_OMINOUS_WOODS_GRASS_ITEM, BOPItems.BOP_OMINOUS_WOODS_GRASS_BLOCK, BOPItems.BOP_OMINOUS_WOODS_GRASS_SLAB, BOPItems.GLOWING_BOP_OMINOUS_WOODS_GRASS_BLOCK, BOPItems.BOP_OMINOUS_WOODS_GRASS, BOPItems.BOP_OMINOUS_WOODS_FERN, BOPItems.TALL_BOP_OMINOUS_WOODS_GRASS, BOPItems.LARGE_BOP_OMINOUS_WOODS_FERN, BOPItems.BOP_OMINOUS_WOODS_SUGAR_CANE, BOPItems.BOP_OMINOUS_WOODS_OVERGROWN_STONE, BOPItems.BOP_OMINOUS_WOODS_OVERGROWN_STONE_SLAB, BOPItems.BOP_OMINOUS_WOODS_OVERGROWN_DACITE, BOPItems.BOP_OMINOUS_WOODS_OVERGROWN_DACITE_SLAB, BOPItems.BOP_OMINOUS_WOODS_OVERGROWN_NETHERRACK, BOPItems.BOP_OMINOUS_WOODS_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerItemColor(BOP_OMINOUS_WOODS_FOLIAGE_ITEM, BOPItems.BOP_OMINOUS_WOODS_ACACIA_LEAVES, BOPItems.BOP_OMINOUS_WOODS_ACACIA_LEAVES_CARPET, BOPItems.BOP_OMINOUS_WOODS_OAK_LEAVES, BOPItems.BOP_OMINOUS_WOODS_OAK_LEAVES_CARPET, BOPItems.BOP_OMINOUS_WOODS_DARK_OAK_LEAVES, BOPItems.BOP_OMINOUS_WOODS_DARK_OAK_LEAVES_CARPET, BOPItems.BOP_OMINOUS_WOODS_JUNGLE_LEAVES, BOPItems.BOP_OMINOUS_WOODS_JUNGLE_LEAVES_CARPET, BOPItems.BOP_OMINOUS_WOODS_VINE);

        ColorUtils.registerItemColor(BOP_ORCHARD_GRASS_ITEM, BOPItems.BOP_ORCHARD_GRASS_BLOCK, BOPItems.BOP_ORCHARD_GRASS_SLAB, BOPItems.GLOWING_BOP_ORCHARD_GRASS_BLOCK, BOPItems.BOP_ORCHARD_GRASS, BOPItems.BOP_ORCHARD_FERN, BOPItems.TALL_BOP_ORCHARD_GRASS, BOPItems.LARGE_BOP_ORCHARD_FERN, BOPItems.BOP_ORCHARD_SUGAR_CANE, BOPItems.BOP_ORCHARD_OVERGROWN_STONE, BOPItems.BOP_ORCHARD_OVERGROWN_STONE_SLAB, BOPItems.BOP_ORCHARD_OVERGROWN_DACITE, BOPItems.BOP_ORCHARD_OVERGROWN_DACITE_SLAB, BOPItems.BOP_ORCHARD_OVERGROWN_NETHERRACK, BOPItems.BOP_ORCHARD_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerItemColor(BOP_ORCHARD_FOLIAGE_ITEM, BOPItems.BOP_ORCHARD_ACACIA_LEAVES, BOPItems.BOP_ORCHARD_ACACIA_LEAVES_CARPET, BOPItems.BOP_ORCHARD_OAK_LEAVES, BOPItems.BOP_ORCHARD_OAK_LEAVES_CARPET, BOPItems.BOP_ORCHARD_DARK_OAK_LEAVES, BOPItems.BOP_ORCHARD_DARK_OAK_LEAVES_CARPET, BOPItems.BOP_ORCHARD_JUNGLE_LEAVES, BOPItems.BOP_ORCHARD_JUNGLE_LEAVES_CARPET, BOPItems.BOP_ORCHARD_VINE);

        ColorUtils.registerItemColor(BOP_ORIGIN_VALLEY_GRASS_ITEM, BOPItems.BOP_ORIGIN_VALLEY_GRASS_BLOCK, BOPItems.BOP_ORIGIN_VALLEY_GRASS_SLAB, BOPItems.GLOWING_BOP_ORIGIN_VALLEY_GRASS_BLOCK, BOPItems.BOP_ORIGIN_VALLEY_GRASS, BOPItems.BOP_ORIGIN_VALLEY_FERN, BOPItems.TALL_BOP_ORIGIN_VALLEY_GRASS, BOPItems.LARGE_BOP_ORIGIN_VALLEY_FERN, BOPItems.BOP_ORIGIN_VALLEY_SUGAR_CANE, BOPItems.BOP_ORIGIN_VALLEY_OVERGROWN_STONE, BOPItems.BOP_ORIGIN_VALLEY_OVERGROWN_STONE_SLAB, BOPItems.BOP_ORIGIN_VALLEY_OVERGROWN_DACITE, BOPItems.BOP_ORIGIN_VALLEY_OVERGROWN_DACITE_SLAB, BOPItems.BOP_ORIGIN_VALLEY_OVERGROWN_NETHERRACK, BOPItems.BOP_ORIGIN_VALLEY_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerItemColor(BOP_ORIGIN_VALLEY_FOLIAGE_ITEM, BOPItems.BOP_ORIGIN_VALLEY_ACACIA_LEAVES, BOPItems.BOP_ORIGIN_VALLEY_ACACIA_LEAVES_CARPET, BOPItems.BOP_ORIGIN_VALLEY_OAK_LEAVES, BOPItems.BOP_ORIGIN_VALLEY_OAK_LEAVES_CARPET, BOPItems.BOP_ORIGIN_VALLEY_DARK_OAK_LEAVES, BOPItems.BOP_ORIGIN_VALLEY_DARK_OAK_LEAVES_CARPET, BOPItems.BOP_ORIGIN_VALLEY_JUNGLE_LEAVES, BOPItems.BOP_ORIGIN_VALLEY_JUNGLE_LEAVES_CARPET, BOPItems.BOP_ORIGIN_VALLEY_VINE);

        ColorUtils.registerItemColor(BOP_RAINBOW_HILLS_GRASS_ITEM, BOPItems.BOP_RAINBOW_HILLS_GRASS_BLOCK, BOPItems.BOP_RAINBOW_HILLS_GRASS_SLAB, BOPItems.GLOWING_BOP_RAINBOW_HILLS_GRASS_BLOCK, BOPItems.BOP_RAINBOW_HILLS_GRASS, BOPItems.BOP_RAINBOW_HILLS_FERN, BOPItems.TALL_BOP_RAINBOW_HILLS_GRASS, BOPItems.LARGE_BOP_RAINBOW_HILLS_FERN, BOPItems.BOP_RAINBOW_HILLS_SUGAR_CANE, BOPItems.BOP_RAINBOW_HILLS_OVERGROWN_STONE, BOPItems.BOP_RAINBOW_HILLS_OVERGROWN_STONE_SLAB, BOPItems.BOP_RAINBOW_HILLS_OVERGROWN_DACITE, BOPItems.BOP_RAINBOW_HILLS_OVERGROWN_DACITE_SLAB, BOPItems.BOP_RAINBOW_HILLS_OVERGROWN_NETHERRACK, BOPItems.BOP_RAINBOW_HILLS_OVERGROWN_NETHERRACK_SLAB);
        // call getFoliageColor
        ColorUtils.registerItemColor(BOP_RAINBOW_HILLS_GRASS_ITEM, BOPItems.BOP_RAINBOW_HILLS_ACACIA_LEAVES, BOPItems.BOP_RAINBOW_HILLS_ACACIA_LEAVES_CARPET, BOPItems.BOP_RAINBOW_HILLS_OAK_LEAVES, BOPItems.BOP_RAINBOW_HILLS_OAK_LEAVES_CARPET, BOPItems.BOP_RAINBOW_HILLS_DARK_OAK_LEAVES, BOPItems.BOP_RAINBOW_HILLS_DARK_OAK_LEAVES_CARPET, BOPItems.BOP_RAINBOW_HILLS_JUNGLE_LEAVES, BOPItems.BOP_RAINBOW_HILLS_JUNGLE_LEAVES_CARPET, BOPItems.BOP_RAINBOW_HILLS_VINE);

        ColorUtils.registerItemColor(BOP_PRAIRIE_GRASS_ITEM, BOPItems.BOP_PRAIRIE_GRASS_BLOCK, BOPItems.BOP_PRAIRIE_GRASS_SLAB, BOPItems.GLOWING_BOP_PRAIRIE_GRASS_BLOCK, BOPItems.BOP_PRAIRIE_GRASS, BOPItems.BOP_PRAIRIE_FERN, BOPItems.TALL_BOP_PRAIRIE_GRASS, BOPItems.LARGE_BOP_PRAIRIE_FERN, BOPItems.BOP_PRAIRIE_SUGAR_CANE, BOPItems.BOP_PRAIRIE_OVERGROWN_STONE, BOPItems.BOP_PRAIRIE_OVERGROWN_STONE_SLAB, BOPItems.BOP_PRAIRIE_OVERGROWN_DACITE, BOPItems.BOP_PRAIRIE_OVERGROWN_DACITE_SLAB, BOPItems.BOP_PRAIRIE_OVERGROWN_NETHERRACK, BOPItems.BOP_PRAIRIE_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerItemColor(BOP_PRAIRIE_FOLIAGE_ITEM, BOPItems.BOP_PRAIRIE_ACACIA_LEAVES, BOPItems.BOP_PRAIRIE_ACACIA_LEAVES_CARPET, BOPItems.BOP_PRAIRIE_OAK_LEAVES, BOPItems.BOP_PRAIRIE_OAK_LEAVES_CARPET, BOPItems.BOP_PRAIRIE_DARK_OAK_LEAVES, BOPItems.BOP_PRAIRIE_DARK_OAK_LEAVES_CARPET, BOPItems.BOP_PRAIRIE_JUNGLE_LEAVES, BOPItems.BOP_PRAIRIE_JUNGLE_LEAVES_CARPET, BOPItems.BOP_PRAIRIE_VINE);

        ColorUtils.registerItemColor(BOP_RAINFOREST_GRASS_ITEM, BOPItems.BOP_RAINFOREST_GRASS_BLOCK, BOPItems.BOP_RAINFOREST_GRASS_SLAB, BOPItems.GLOWING_BOP_RAINFOREST_GRASS_BLOCK, BOPItems.BOP_RAINFOREST_GRASS, BOPItems.BOP_RAINFOREST_FERN, BOPItems.TALL_BOP_RAINFOREST_GRASS, BOPItems.LARGE_BOP_RAINFOREST_FERN, BOPItems.BOP_RAINFOREST_SUGAR_CANE, BOPItems.BOP_RAINFOREST_OVERGROWN_STONE, BOPItems.BOP_RAINFOREST_OVERGROWN_STONE_SLAB, BOPItems.BOP_RAINFOREST_OVERGROWN_DACITE, BOPItems.BOP_RAINFOREST_OVERGROWN_DACITE_SLAB, BOPItems.BOP_RAINFOREST_OVERGROWN_NETHERRACK, BOPItems.BOP_RAINFOREST_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerItemColor(BOP_RAINFOREST_FOLIAGE_ITEM, BOPItems.BOP_RAINFOREST_ACACIA_LEAVES, BOPItems.BOP_RAINFOREST_ACACIA_LEAVES_CARPET, BOPItems.BOP_RAINFOREST_OAK_LEAVES, BOPItems.BOP_RAINFOREST_OAK_LEAVES_CARPET, BOPItems.BOP_RAINFOREST_DARK_OAK_LEAVES, BOPItems.BOP_RAINFOREST_DARK_OAK_LEAVES_CARPET, BOPItems.BOP_RAINFOREST_JUNGLE_LEAVES, BOPItems.BOP_RAINFOREST_JUNGLE_LEAVES_CARPET, BOPItems.BOP_RAINFOREST_VINE);

        ColorUtils.registerItemColor(BOP_REDWOOD_FOREST_GRASS_ITEM, BOPItems.BOP_REDWOOD_FOREST_GRASS_BLOCK, BOPItems.BOP_REDWOOD_FOREST_GRASS_SLAB, BOPItems.GLOWING_BOP_REDWOOD_FOREST_GRASS_BLOCK, BOPItems.BOP_REDWOOD_FOREST_GRASS, BOPItems.BOP_REDWOOD_FOREST_FERN, BOPItems.TALL_BOP_REDWOOD_FOREST_GRASS, BOPItems.LARGE_BOP_REDWOOD_FOREST_FERN, BOPItems.BOP_REDWOOD_FOREST_SUGAR_CANE, BOPItems.BOP_REDWOOD_FOREST_OVERGROWN_STONE, BOPItems.BOP_REDWOOD_FOREST_OVERGROWN_STONE_SLAB, BOPItems.BOP_REDWOOD_FOREST_OVERGROWN_DACITE, BOPItems.BOP_REDWOOD_FOREST_OVERGROWN_DACITE_SLAB, BOPItems.BOP_REDWOOD_FOREST_OVERGROWN_NETHERRACK, BOPItems.BOP_REDWOOD_FOREST_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerItemColor(BOP_REDWOOD_FOREST_FOLIAGE_ITEM, BOPItems.BOP_REDWOOD_FOREST_ACACIA_LEAVES, BOPItems.BOP_REDWOOD_FOREST_ACACIA_LEAVES_CARPET, BOPItems.BOP_REDWOOD_FOREST_OAK_LEAVES, BOPItems.BOP_REDWOOD_FOREST_OAK_LEAVES_CARPET, BOPItems.BOP_REDWOOD_FOREST_DARK_OAK_LEAVES, BOPItems.BOP_REDWOOD_FOREST_DARK_OAK_LEAVES_CARPET, BOPItems.BOP_REDWOOD_FOREST_JUNGLE_LEAVES, BOPItems.BOP_REDWOOD_FOREST_JUNGLE_LEAVES_CARPET, BOPItems.BOP_REDWOOD_FOREST_VINE);

        ColorUtils.registerItemColor(BOP_SCRUBLAND_ITEM, BOPItems.BOP_SCRUBLAND_GRASS_BLOCK, BOPItems.BOP_SCRUBLAND_GRASS_SLAB, BOPItems.GLOWING_BOP_SCRUBLAND_GRASS_BLOCK, BOPItems.BOP_SCRUBLAND_GRASS, BOPItems.BOP_SCRUBLAND_FERN, BOPItems.TALL_BOP_SCRUBLAND_GRASS, BOPItems.LARGE_BOP_SCRUBLAND_FERN, BOPItems.BOP_SCRUBLAND_SUGAR_CANE, BOPItems.BOP_SCRUBLAND_OVERGROWN_STONE, BOPItems.BOP_SCRUBLAND_OVERGROWN_STONE_SLAB, BOPItems.BOP_SCRUBLAND_OVERGROWN_DACITE, BOPItems.BOP_SCRUBLAND_OVERGROWN_DACITE_SLAB, BOPItems.BOP_SCRUBLAND_OVERGROWN_NETHERRACK, BOPItems.BOP_SCRUBLAND_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerItemColor(BOP_SCRUBLAND_ITEM, BOPItems.BOP_SCRUBLAND_ACACIA_LEAVES, BOPItems.BOP_SCRUBLAND_ACACIA_LEAVES_CARPET, BOPItems.BOP_SCRUBLAND_OAK_LEAVES, BOPItems.BOP_SCRUBLAND_OAK_LEAVES_CARPET, BOPItems.BOP_SCRUBLAND_DARK_OAK_LEAVES, BOPItems.BOP_SCRUBLAND_DARK_OAK_LEAVES_CARPET, BOPItems.BOP_SCRUBLAND_JUNGLE_LEAVES, BOPItems.BOP_SCRUBLAND_JUNGLE_LEAVES_CARPET, BOPItems.BOP_SCRUBLAND_VINE);

        ColorUtils.registerItemColor(BOP_SEASONAL_FOREST_GRASS_ITEM, BOPItems.BOP_SEASONAL_FOREST_GRASS_BLOCK, BOPItems.BOP_SEASONAL_FOREST_GRASS_SLAB, BOPItems.GLOWING_BOP_SEASONAL_FOREST_GRASS_BLOCK, BOPItems.BOP_SEASONAL_FOREST_GRASS, BOPItems.BOP_SEASONAL_FOREST_FERN, BOPItems.TALL_BOP_SEASONAL_FOREST_GRASS, BOPItems.LARGE_BOP_SEASONAL_FOREST_FERN, BOPItems.BOP_SEASONAL_FOREST_SUGAR_CANE, BOPItems.BOP_SEASONAL_FOREST_OVERGROWN_STONE, BOPItems.BOP_SEASONAL_FOREST_OVERGROWN_STONE_SLAB, BOPItems.BOP_SEASONAL_FOREST_OVERGROWN_DACITE, BOPItems.BOP_SEASONAL_FOREST_OVERGROWN_DACITE_SLAB, BOPItems.BOP_SEASONAL_FOREST_OVERGROWN_NETHERRACK, BOPItems.BOP_SEASONAL_FOREST_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerItemColor(BOP_SEASONAL_FOREST_FOLIAGE_ITEM, BOPItems.BOP_SEASONAL_FOREST_ACACIA_LEAVES, BOPItems.BOP_SEASONAL_FOREST_ACACIA_LEAVES_CARPET, BOPItems.BOP_SEASONAL_FOREST_OAK_LEAVES, BOPItems.BOP_SEASONAL_FOREST_OAK_LEAVES_CARPET, BOPItems.BOP_SEASONAL_FOREST_DARK_OAK_LEAVES, BOPItems.BOP_SEASONAL_FOREST_DARK_OAK_LEAVES_CARPET, BOPItems.BOP_SEASONAL_FOREST_JUNGLE_LEAVES, BOPItems.BOP_SEASONAL_FOREST_JUNGLE_LEAVES_CARPET, BOPItems.BOP_SEASONAL_FOREST_VINE);

        ColorUtils.registerItemColor(BOP_SHRUBLAND_ITEM, BOPItems.BOP_SHRUBLAND_GRASS_BLOCK, BOPItems.BOP_SHRUBLAND_GRASS_SLAB, BOPItems.GLOWING_BOP_SHRUBLAND_GRASS_BLOCK, BOPItems.BOP_SHRUBLAND_GRASS, BOPItems.BOP_SHRUBLAND_FERN, BOPItems.TALL_BOP_SHRUBLAND_GRASS, BOPItems.LARGE_BOP_SHRUBLAND_FERN, BOPItems.BOP_SHRUBLAND_SUGAR_CANE, BOPItems.BOP_SHRUBLAND_OVERGROWN_STONE, BOPItems.BOP_SHRUBLAND_OVERGROWN_STONE_SLAB, BOPItems.BOP_SHRUBLAND_OVERGROWN_DACITE, BOPItems.BOP_SHRUBLAND_OVERGROWN_DACITE_SLAB, BOPItems.BOP_SHRUBLAND_OVERGROWN_NETHERRACK, BOPItems.BOP_SHRUBLAND_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerItemColor(BOP_SHRUBLAND_ITEM, BOPItems.BOP_SHRUBLAND_ACACIA_LEAVES, BOPItems.BOP_SHRUBLAND_ACACIA_LEAVES_CARPET, BOPItems.BOP_SHRUBLAND_OAK_LEAVES, BOPItems.BOP_SHRUBLAND_OAK_LEAVES_CARPET, BOPItems.BOP_SHRUBLAND_DARK_OAK_LEAVES, BOPItems.BOP_SHRUBLAND_DARK_OAK_LEAVES_CARPET, BOPItems.BOP_SHRUBLAND_JUNGLE_LEAVES, BOPItems.BOP_SHRUBLAND_JUNGLE_LEAVES_CARPET, BOPItems.BOP_SHRUBLAND_VINE);

        ColorUtils.registerItemColor(BOP_TROPICS_ITEM, BOPItems.BOP_TROPICS_GRASS_BLOCK, BOPItems.BOP_TROPICS_GRASS_SLAB, BOPItems.GLOWING_BOP_TROPICS_GRASS_BLOCK, BOPItems.BOP_TROPICS_GRASS, BOPItems.BOP_TROPICS_FERN, BOPItems.TALL_BOP_TROPICS_GRASS, BOPItems.LARGE_BOP_TROPICS_FERN, BOPItems.BOP_TROPICS_SUGAR_CANE, BOPItems.BOP_TROPICS_OVERGROWN_STONE, BOPItems.BOP_TROPICS_OVERGROWN_STONE_SLAB, BOPItems.BOP_TROPICS_OVERGROWN_DACITE, BOPItems.BOP_TROPICS_OVERGROWN_DACITE_SLAB, BOPItems.BOP_TROPICS_OVERGROWN_NETHERRACK, BOPItems.BOP_TROPICS_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerItemColor(BOP_TROPICS_ITEM, BOPItems.BOP_TROPICS_ACACIA_LEAVES, BOPItems.BOP_TROPICS_ACACIA_LEAVES_CARPET, BOPItems.BOP_TROPICS_OAK_LEAVES, BOPItems.BOP_TROPICS_OAK_LEAVES_CARPET, BOPItems.BOP_TROPICS_DARK_OAK_LEAVES, BOPItems.BOP_TROPICS_DARK_OAK_LEAVES_CARPET, BOPItems.BOP_TROPICS_JUNGLE_LEAVES, BOPItems.BOP_TROPICS_JUNGLE_LEAVES_CARPET, BOPItems.BOP_TROPICS_VINE);

        ColorUtils.registerItemColor(BOP_TUNDRA_GRASS_ITEM, BOPItems.BOP_TUNDRA_GRASS_BLOCK, BOPItems.BOP_TUNDRA_GRASS_SLAB, BOPItems.GLOWING_BOP_TUNDRA_GRASS_BLOCK, BOPItems.BOP_TUNDRA_GRASS, BOPItems.BOP_TUNDRA_FERN, BOPItems.TALL_BOP_TUNDRA_GRASS, BOPItems.LARGE_BOP_TUNDRA_FERN, BOPItems.BOP_TUNDRA_SUGAR_CANE, BOPItems.BOP_TUNDRA_OVERGROWN_STONE, BOPItems.BOP_TUNDRA_OVERGROWN_STONE_SLAB, BOPItems.BOP_TUNDRA_OVERGROWN_DACITE, BOPItems.BOP_TUNDRA_OVERGROWN_DACITE_SLAB, BOPItems.BOP_TUNDRA_OVERGROWN_NETHERRACK, BOPItems.BOP_TUNDRA_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerItemColor(BOP_TUNDRA_FOLIAGE_ITEM, BOPItems.BOP_TUNDRA_ACACIA_LEAVES, BOPItems.BOP_TUNDRA_ACACIA_LEAVES_CARPET, BOPItems.BOP_TUNDRA_OAK_LEAVES, BOPItems.BOP_TUNDRA_OAK_LEAVES_CARPET, BOPItems.BOP_TUNDRA_DARK_OAK_LEAVES, BOPItems.BOP_TUNDRA_DARK_OAK_LEAVES_CARPET, BOPItems.BOP_TUNDRA_JUNGLE_LEAVES, BOPItems.BOP_TUNDRA_JUNGLE_LEAVES_CARPET, BOPItems.BOP_TUNDRA_VINE);

        ColorUtils.registerItemColor(BOP_VOLCANO_GRASS_ITEM, BOPItems.BOP_VOLCANO_GRASS_BLOCK, BOPItems.BOP_VOLCANO_GRASS_SLAB, BOPItems.GLOWING_BOP_VOLCANO_GRASS_BLOCK, BOPItems.BOP_VOLCANO_GRASS, BOPItems.BOP_VOLCANO_FERN, BOPItems.TALL_BOP_VOLCANO_GRASS, BOPItems.LARGE_BOP_VOLCANO_FERN, BOPItems.BOP_VOLCANO_SUGAR_CANE, BOPItems.BOP_VOLCANO_OVERGROWN_STONE, BOPItems.BOP_VOLCANO_OVERGROWN_STONE_SLAB, BOPItems.BOP_VOLCANO_OVERGROWN_DACITE, BOPItems.BOP_VOLCANO_OVERGROWN_DACITE_SLAB, BOPItems.BOP_VOLCANO_OVERGROWN_NETHERRACK, BOPItems.BOP_VOLCANO_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerItemColor(BOP_VOLCANO_FOLIAGE_ITEM, BOPItems.BOP_VOLCANO_ACACIA_LEAVES, BOPItems.BOP_VOLCANO_ACACIA_LEAVES_CARPET, BOPItems.BOP_VOLCANO_OAK_LEAVES, BOPItems.BOP_VOLCANO_OAK_LEAVES_CARPET, BOPItems.BOP_VOLCANO_DARK_OAK_LEAVES, BOPItems.BOP_VOLCANO_DARK_OAK_LEAVES_CARPET, BOPItems.BOP_VOLCANO_JUNGLE_LEAVES, BOPItems.BOP_VOLCANO_JUNGLE_LEAVES_CARPET, BOPItems.BOP_VOLCANO_VINE);

        ColorUtils.registerItemColor(BOP_WASTELAND_GRASS_ITEM, BOPItems.BOP_WASTELAND_GRASS_BLOCK, BOPItems.BOP_WASTELAND_GRASS_SLAB, BOPItems.GLOWING_BOP_WASTELAND_GRASS_BLOCK, BOPItems.BOP_WASTELAND_GRASS, BOPItems.BOP_WASTELAND_FERN, BOPItems.TALL_BOP_WASTELAND_GRASS, BOPItems.LARGE_BOP_WASTELAND_FERN, BOPItems.BOP_WASTELAND_SUGAR_CANE, BOPItems.BOP_WASTELAND_OVERGROWN_STONE, BOPItems.BOP_WASTELAND_OVERGROWN_STONE_SLAB, BOPItems.BOP_WASTELAND_OVERGROWN_DACITE, BOPItems.BOP_WASTELAND_OVERGROWN_DACITE_SLAB, BOPItems.BOP_WASTELAND_OVERGROWN_NETHERRACK, BOPItems.BOP_WASTELAND_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerItemColor(BOP_WASTELAND_FOLIAGE_ITEM, BOPItems.BOP_WASTELAND_ACACIA_LEAVES, BOPItems.BOP_WASTELAND_ACACIA_LEAVES_CARPET, BOPItems.BOP_WASTELAND_OAK_LEAVES, BOPItems.BOP_WASTELAND_OAK_LEAVES_CARPET, BOPItems.BOP_WASTELAND_DARK_OAK_LEAVES, BOPItems.BOP_WASTELAND_DARK_OAK_LEAVES_CARPET, BOPItems.BOP_WASTELAND_JUNGLE_LEAVES, BOPItems.BOP_WASTELAND_JUNGLE_LEAVES_CARPET, BOPItems.BOP_WASTELAND_VINE);

        ColorUtils.registerItemColor(BOP_WETLAND_GRASS_ITEM, BOPItems.BOP_WETLAND_GRASS_BLOCK, BOPItems.BOP_WETLAND_GRASS_SLAB, BOPItems.GLOWING_BOP_WETLAND_GRASS_BLOCK, BOPItems.BOP_WETLAND_GRASS, BOPItems.BOP_WETLAND_FERN, BOPItems.TALL_BOP_WETLAND_GRASS, BOPItems.LARGE_BOP_WETLAND_FERN, BOPItems.BOP_WETLAND_SUGAR_CANE, BOPItems.BOP_WETLAND_OVERGROWN_STONE, BOPItems.BOP_WETLAND_OVERGROWN_STONE_SLAB, BOPItems.BOP_WETLAND_OVERGROWN_DACITE, BOPItems.BOP_WETLAND_OVERGROWN_DACITE_SLAB, BOPItems.BOP_WETLAND_OVERGROWN_NETHERRACK, BOPItems.BOP_WETLAND_OVERGROWN_NETHERRACK_SLAB);
        ColorUtils.registerItemColor(BOP_WETLAND_FOLIAGE_ITEM, BOPItems.BOP_WETLAND_ACACIA_LEAVES, BOPItems.BOP_WETLAND_ACACIA_LEAVES_CARPET, BOPItems.BOP_WETLAND_OAK_LEAVES, BOPItems.BOP_WETLAND_OAK_LEAVES_CARPET, BOPItems.BOP_WETLAND_DARK_OAK_LEAVES, BOPItems.BOP_WETLAND_DARK_OAK_LEAVES_CARPET, BOPItems.BOP_WETLAND_JUNGLE_LEAVES, BOPItems.BOP_WETLAND_JUNGLE_LEAVES_CARPET, BOPItems.BOP_WETLAND_VINE);

    }



    private static final BlockColorProvider BOP_BAMBOO_BLOSSOM_GROVE = ColorUtils.setDynamicBlockColorProvider(0.6F, 0.9F);

    // 0.95F, 0.9F
    // same as bayou mangrove, deep bayou
    private static final BlockColorProvider BOP_BAYOU_GRASS = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0x6FAA50;
        }
    };
    private static final BlockColorProvider BOP_BAYOU_FOLIAGE = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0x8BDB67;
        }
    };

    // 0.3F, 0.3F
    private static final BlockColorProvider BOP_BURNT_FOREST_GRASS = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0x514F46;
        }
    }; // leaves same as dead forest
    private static final BlockColorProvider BOP_BURNT_FOREST_FOLIAGE = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0xB7B763;
        }
    };

    // 0.6F, 0.9F
    private static final BlockColorProvider BOP_CHERRY_BLOSSOM_GROVE_GRASS = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0x85CE71;
        }
    };
    private static final BlockColorProvider BOP_CHERRY_BLOSSOM_GROVE_FOLIAGE = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0x63BF66;
        }
    };


    private static final BlockColorProvider BOP_CONIFEROUS_FOREST = ColorUtils.setDynamicBlockColorProvider(0.45F, 0.5F);

    // 0.3F, 0.3F
    private static final BlockColorProvider BOP_DEAD_FOREST_GRASS = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0xBAAD64;
        }
    };
    private static final BlockColorProvider BOP_DEAD_FOREST_FOLIAGE = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0xB7B763;
        }
    };


    // 0.8F, 0.5F
    private static final BlockColorProvider BOP_WOODLAND_GRASS = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0x85C047;
        }
    };
    private static final BlockColorProvider BOP_WOODLAND_FOLIAGE = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0x68AF1A;
        }
    };

    // 0.85F, 0.05F
    // same as dry boneyard
    private static final BlockColorProvider BOP_DRYLAND_GRASS = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0xE5DFA9;
        }
    };
    private static final BlockColorProvider BOP_DRYLAND_FOLIAGE = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0xDAE0B3;
        }
    };

    // 0.9F, 0.9F
    private static final BlockColorProvider BOP_FUNGAL_FIELD_GRASS = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0x4AA2F9;
        }
    };
    private static final BlockColorProvider BOP_FUNGAL_FIELD_FOLIAGE = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0x4ADCF9;
        }
    };

    // 0.9F, 0.9F
    private static final BlockColorProvider BOP_FUNGAL_FIELD_VARIANT_GRASS = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0x4DD6CA;
        }
    };


    private static final BlockColorProvider BOP_GRAVEL_BEACH = ColorUtils.setDynamicBlockColorProvider(0.6F, 0.5F);

    private static final BlockColorProvider BOP_GROVE = ColorUtils.setDynamicBlockColorProvider(0.8F, 0.275F);

    // 0.8F, 0.85F
    private static final BlockColorProvider BOP_JADE_CLIFFS_GRASS = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0x7CA568;
        }
    };
    private static final BlockColorProvider BOP_JADE_CLIFFS_FOLIAGE = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0x8BB76E;
        }
    };

    // 0.8F, 0.7F
    private static final BlockColorProvider BOP_LAVENDER_FIELD = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0xA1C36D;
        }
    };

    // 0.9F, 0.5F
    // same as lush savanna
    private static final BlockColorProvider BOP_LUSH_DESERT_GRASS = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0xEFE182;
        }
    };
    private static final BlockColorProvider BOP_LUSH_DESERT_FOLIAGE = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0xD3D156;
        }
    };

    private static final BlockColorProvider BOP_MARSH = ColorUtils.setDynamicBlockColorProvider(0.65F, 0.7F);

    // 0.4F, 0.7F
    private static final BlockColorProvider BOP_MEADOW = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0x63B26D;
        }
    };

    // -0.25F, 0.6F
    private static final BlockColorProvider BOP_MUSKEG_GRASS = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0x94966E;
        }
    };
    private static final BlockColorProvider BOP_MUSKEG_FOLIAGE = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0x8D9B6B;
        }
    };

    // 0.7F, 0.8F
    private static final BlockColorProvider BOP_MYSTIC_GROVE_GRASS = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0x69CFDB;
        }
    };
    private static final BlockColorProvider BOP_MYSTIC_GROVE_FOLIAGE = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0x70E0B5;
        }
    };

    // 0.6F, 0.6F
    private static final BlockColorProvider BOP_OMINOUS_WOODS_GRASS = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0x4C4A70;
        }
    };
    private static final BlockColorProvider BOP_OMINOUS_WOODS_FOLIAGE = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0x6B487C;
        }
    };

    // 0.8F, 0.4F
    private static final BlockColorProvider BOP_ORCHARD_GRASS = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0xA9DB69;
        }
    };
    private static final BlockColorProvider BOP_ORCHARD_FOLIAGE = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0xC9F75D;
        }
    };

    // 0.6F, 0.6F
    private static final BlockColorProvider BOP_ORIGIN_VALLEY_GRASS = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0x9AFF5F;
        }
    };
    private static final BlockColorProvider BOP_ORIGIN_VALLEY_FOLIAGE = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0x3AFF00;
        }
    };



    // 0.8F, 0.3F
    private static final BlockColorProvider BOP_PRAIRIE_GRASS = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0xE4EA77;
        }
    };
    private static final BlockColorProvider BOP_PRAIRIE_FOLIAGE = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0xC7E672;
        }
    };

    // 0.55F, 1.0F
    private static final BlockColorProvider BOP_RAINBOW_HILLS_GRASS = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0x75CE8D;
        }
    }; // leaves call getFoliageColor

    // 1.2F, 2.0F
    private static final BlockColorProvider BOP_RAINFOREST_GRASS = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0xA7E140;
        }
    };
    private static final BlockColorProvider BOP_RAINFOREST_FOLIAGE = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0x88E140;
        }
    };

    // 0.8F, 0.6F
    private static final BlockColorProvider BOP_REDWOOD_FOREST_GRASS = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0xB5D55C;
        }
    };
    private static final BlockColorProvider BOP_REDWOOD_FOREST_FOLIAGE = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0x8EBF42;
        }
    };

    // should be 1.1F
    private static final BlockColorProvider BOP_SCRUBLAND = ColorUtils.setDynamicBlockColorProvider(1.0F, 0.15F);

    // 0.4F, 0.8F
    private static final BlockColorProvider BOP_SEASONAL_FOREST_GRASS = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0xDD9A4A;
        }
    };
    private static final BlockColorProvider BOP_SEASONAL_FOREST_FOLIAGE = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0xD1B24A;
        }
    };

    private static final BlockColorProvider BOP_SHRUBLAND = ColorUtils.setDynamicBlockColorProvider(0.6F, 0.05F);


    private static final BlockColorProvider BOP_TROPICS = ColorUtils.setDynamicBlockColorProvider(0.95F, 1.0F);

    // 0.2F, 0.5F
    private static final BlockColorProvider BOP_TUNDRA_GRASS = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0xC08359;
        }
    };
    private static final BlockColorProvider BOP_TUNDRA_FOLIAGE = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0xC5975C;
        }
    };

    // 0.95F, 0.3F
    private static final BlockColorProvider BOP_VOLCANO_GRASS = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0x4A703B;
        }
    };
    private static final BlockColorProvider BOP_VOLCANO_FOLIAGE = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0x547D42;
        }
    };

    // 2.0F, 0.0F
    private static final BlockColorProvider BOP_WASTELAND_GRASS = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0xAD9364;
        }
    };
    private static final BlockColorProvider BOP_WASTELAND_FOLIAGE = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0xB5A76C;
        }
    };

    // 0.6F, 0.7F
    private static final BlockColorProvider BOP_WETLAND_GRASS = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0x5A935F;
        }
    };
    private static final BlockColorProvider BOP_WETLAND_FOLIAGE = new BlockColorProvider() {
        @Override
        public int getColor(BlockState state, @Nullable BlockRenderView world, @Nullable BlockPos pos, int tintIndex) {
            return 0x4F9657;
        }
    };

    /*


    ITEM COLORS



     */

    private static final ItemColorProvider BOP_BAMBOO_BLOSSOM_GROVE_ITEM = (item, stack) -> GrassColors.getColor(0.6F, 0.9F);

    // 0.95F, 0.9F
    // same as bayou mangrove, deep bayou
    private static final ItemColorProvider BOP_BAYOU_GRASS_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0x6FAA50;
        }
    };
    private static final ItemColorProvider BOP_BAYOU_FOLIAGE_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0x8BDB67;
        }
    };

    // 0.3F, 0.3F
    private static final ItemColorProvider BOP_BURNT_FOREST_GRASS_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0x514F46;
        }
    }; // leaves same as dead forest
    private static final ItemColorProvider BOP_BURNT_FOREST_FOLIAGE_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0xB7B763;
        }
    };

    // 0.6F, 0.9F
    private static final ItemColorProvider BOP_CHERRY_BLOSSOM_GROVE_GRASS_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0x85CE71;
        }
    };
    private static final ItemColorProvider BOP_CHERRY_BLOSSOM_GROVE_FOLIAGE_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0x63BF66;
        }
    };


    private static final ItemColorProvider BOP_CONIFEROUS_FOREST_ITEM = (item, stack) -> GrassColors.getColor(0.45F, 0.5F);

    // 0.3F, 0.3F
    private static final ItemColorProvider BOP_DEAD_FOREST_GRASS_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0xBAAD64;
        }
    };
    private static final ItemColorProvider BOP_DEAD_FOREST_FOLIAGE_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0xB7B763;
        }
    };


    // 0.8F, 0.5F
    private static final ItemColorProvider BOP_WOODLAND_GRASS_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0x85C047;
        }
    };
    private static final ItemColorProvider BOP_WOODLAND_FOLIAGE_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0x68AF1A;
        }
    };

    // 0.85F, 0.05F
    // same as dry boneyard
    private static final ItemColorProvider BOP_DRYLAND_GRASS_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0xE5DFA9;
        }
    };
    private static final ItemColorProvider BOP_DRYLAND_FOLIAGE_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0xDAE0B3;
        }
    };

    // 0.9F, 0.9F
    private static final ItemColorProvider BOP_FUNGAL_FIELD_GRASS_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0x4AA2F9;
        }
    };
    private static final ItemColorProvider BOP_FUNGAL_FIELD_FOLIAGE_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0x4ADCF9;
        }
    };

    // 0.9F, 0.9F
    private static final ItemColorProvider BOP_FUNGAL_FIELD_VARIANT_GRASS_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0x4DD6CA;
        }
    };


    private static final ItemColorProvider BOP_GRAVEL_BEACH_ITEM = (item, stack) -> GrassColors.getColor(0.6F, 0.5F);

    private static final ItemColorProvider BOP_GROVE_ITEM = (item, stack) -> GrassColors.getColor(0.8F, 0.275F);


    // 0.8F, 0.85F
    private static final ItemColorProvider BOP_JADE_CLIFFS_GRASS_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0x7CA568;
        }
    };
    private static final ItemColorProvider BOP_JADE_CLIFFS_FOLIAGE_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0x8BB76E;
        }
    };

    // 0.8F, 0.7F
    private static final ItemColorProvider BOP_LAVENDER_FIELD_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0xA1C36D;
        }
    };

    // 0.9F, 0.5F
    // same as lush savanna
    private static final ItemColorProvider BOP_LUSH_DESERT_GRASS_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0xEFE182;
        }
    };
    private static final ItemColorProvider BOP_LUSH_DESERT_FOLIAGE_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0xD3D156;
        }
    };

    private static final ItemColorProvider BOP_MARSH_ITEM = (item, stack) -> GrassColors.getColor(0.65F, 0.7F);

    // 0.4F, 0.7F
    private static final ItemColorProvider BOP_MEADOW_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0x63B26D;
        }
    };

    // -0.25F, 0.6F
    private static final ItemColorProvider BOP_MUSKEG_GRASS_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0x94966E;
        }
    };
    private static final ItemColorProvider BOP_MUSKEG_FOLIAGE_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0x8D9B6B;
        }
    };

    // 0.7F, 0.8F
    private static final ItemColorProvider BOP_MYSTIC_GROVE_GRASS_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0x69CFDB;
        }
    };
    private static final ItemColorProvider BOP_MYSTIC_GROVE_FOLIAGE_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0x70E0B5;
        }
    };

    // 0.6F, 0.6F
    private static final ItemColorProvider BOP_OMINOUS_WOODS_GRASS_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0x4C4A70;
        }
    };
    private static final ItemColorProvider BOP_OMINOUS_WOODS_FOLIAGE_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0x6B487C;
        }
    };

    // 0.8F, 0.4F
    private static final ItemColorProvider BOP_ORCHARD_GRASS_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0xA9DB69;
        }
    };
    private static final ItemColorProvider BOP_ORCHARD_FOLIAGE_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0xC9F75D;
        }
    };

    // 0.6F, 0.6F
    private static final ItemColorProvider BOP_ORIGIN_VALLEY_GRASS_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0x9AFF5F;
        }
    };
    private static final ItemColorProvider BOP_ORIGIN_VALLEY_FOLIAGE_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0x3AFF00;
        }
    };



    // 0.8F, 0.3F
    private static final ItemColorProvider BOP_PRAIRIE_GRASS_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0xE4EA77;
        }
    };
    private static final ItemColorProvider BOP_PRAIRIE_FOLIAGE_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0xC7E672;
        }
    };

    // 0.55F, 1.0F
    private static final ItemColorProvider BOP_RAINBOW_HILLS_GRASS_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0x75CE8D;
        }
    }; // leaves call getFoliageColor

    // 1.2F, 2.0F
    private static final ItemColorProvider BOP_RAINFOREST_GRASS_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0xA7E140;
        }
    };
    private static final ItemColorProvider BOP_RAINFOREST_FOLIAGE_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0x88E140;
        }
    };

    // 0.8F, 0.6F
    private static final ItemColorProvider BOP_REDWOOD_FOREST_GRASS_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0xB5D55C;
        }
    };
    private static final ItemColorProvider BOP_REDWOOD_FOREST_FOLIAGE_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0x8EBF42;
        }
    };

    // should be 1.1F
    private static final ItemColorProvider BOP_SCRUBLAND_ITEM = (item, stack) -> GrassColors.getColor(1.0F, 0.15F);

    // 0.4F, 0.8F
    private static final ItemColorProvider BOP_SEASONAL_FOREST_GRASS_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0xDD9A4A;
        } // 0xB5B952
    };
    private static final ItemColorProvider BOP_SEASONAL_FOREST_FOLIAGE_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0xD1B24A;
        } // 0xA3A627
    };

    private static final ItemColorProvider BOP_SHRUBLAND_ITEM = (item, stack) -> GrassColors.getColor(0.6F, 0.05F);


    private static final ItemColorProvider BOP_TROPICS_ITEM = (item, stack) -> GrassColors.getColor(0.95F, 1.0F);

    // 0.2F, 0.5F
    private static final ItemColorProvider BOP_TUNDRA_GRASS_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0xC08359;
        }
    };
    private static final ItemColorProvider BOP_TUNDRA_FOLIAGE_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0xC5975C;
        }
    };

    // 0.95F, 0.3F
    private static final ItemColorProvider BOP_VOLCANO_GRASS_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0x4A703B;
        }
    };
    private static final ItemColorProvider BOP_VOLCANO_FOLIAGE_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0x547D42;
        }
    };

    // 2.0F, 0.0F
    private static final ItemColorProvider BOP_WASTELAND_GRASS_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0xAD9364;
        }
    };
    private static final ItemColorProvider BOP_WASTELAND_FOLIAGE_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0xB5A76C;
        }
    };

    // 0.6F, 0.7F
    private static final ItemColorProvider BOP_WETLAND_GRASS_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0x5A935F;
        }
    };
    private static final ItemColorProvider BOP_WETLAND_FOLIAGE_ITEM = new ItemColorProvider() {
        @Override
        public int getColor(ItemStack stack, int tintIndex) {
            return 0x4F9657;
        }
    };


}
